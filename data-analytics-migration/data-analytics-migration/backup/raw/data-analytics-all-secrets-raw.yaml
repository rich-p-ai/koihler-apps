apiVersion: v1
items:
- apiVersion: v1
  data:
    password: ZHJrQjRkYXkk
    username: cGFyYXNoYXJfc2luZ2g=
  kind: Secret
  metadata:
    creationTimestamp: "2021-09-14T17:52:05Z"
    name: bit-bucket
    namespace: data-analytics
    resourceVersion: "491248560"
    uid: 85463af0-0282-438d-84e8-b277de5b3ed7
  type: kubernetes.io/basic-auth
- apiVersion: v1
  data:
    password: TFc4ckQ0N05OdUNIa0FWNVE3OUY=
    username: cGFyYXNoYXJfc2luZ2g=
  kind: Secret
  metadata:
    creationTimestamp: "2023-08-29T16:04:46Z"
    name: bit-bucket-secret
    namespace: data-analytics
    resourceVersion: "2474733673"
    uid: c8353d33-0633-4fec-a9db-0dfff96566b1
  type: kubernetes.io/basic-auth
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: a47451ff-6005-4253-ae44-e79dd668c4e9
      openshift.io/token-secret.name: builder-token-hp4g8
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkYXRhLWFuYWx5dGljcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJidWlsZGVyLXRva2VuLWhwNGc4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImJ1aWxkZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJhNDc0NTFmZi02MDA1LTQyNTMtYWU0NC1lNzlkZDY2OGM0ZTkiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGF0YS1hbmFseXRpY3M6YnVpbGRlciJ9.wtuvRjkqhs5u0A2DmbngulZdsyjCy2kQbL8TGN9UAp7LAyoBG4sDh1NAsmmj8j6sbawe42XcJMO9bYUZD_6keeSJpb-hXyQyQVG6JYU2DB7niPYaIOv_9zSPD0rj6Y7W1QVChXJUWiS5LysQJAw3BS6H9yfvsMgrB5lGkSp0nU2uczsXFcZWZahSP3MeKmN5UkIKiUGbvPy4XbbDmexEBlmvxUiM2Z6PbII4rrtZeFhwnMkpjUzwhTMPtiRUihg95PI5lUD0lMRzKh3aVdXi_Lpvs662mOza88Mnrc33Gpe3TntSdrbereMHiXuVJdz2wQbze5-mxYglbUyLftNgKQ
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: builder-dockercfg-jkd5j
    namespace: data-analytics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-hp4g8
      uid: 73ea4df3-58b7-405f-9805-ded526e1aea6
    resourceVersion: "451772616"
    uid: 3f03c418-64c0-4d59-80ef-dface955cc79
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5rb2hsZXJjby5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMGIyTndORjlrWVhSaExXRnVZV3g1ZEdsamN5dGlkV2xzWkdWeU9qVldSMDR4TURneldWbEtNRkpYUWxCQlZUUlZXREpLTjFsRVdGUklVVFZLTVVoTVNGWklPVWc0TTB0S01VOHpSa0ZLUTFCYVExSkRWVTA0VGtGSFFqQT0ifX19
  kind: Secret
  metadata:
    creationTimestamp: "2023-05-14T18:01:09Z"
    name: builder-quay-openshiftocp4
    namespace: data-analytics
    resourceVersion: "2008514136"
    uid: ec544536-ce65-455a-bb9c-5de8dd3f1973
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmlkV2xzWkdWeUxYUnZhMlZ1TFdod05HYzRJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbUoxYVd4a1pYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmhORGMwTlRGbVppMDJNREExTFRReU5UTXRZV1UwTkMxbE56bGtaRFkyT0dNMFpUa2lMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdGMFlTMWhibUZzZVhScFkzTTZZblZwYkdSbGNpSjkud3R1dlJqa3FoczV1MEEyRG1ibmd1bFpkc3lqQ3kya1FiTDhUR045VUFwN0xBeW9CRzRzRGgxTkFzbW1qOGo2c2Jhd2U0MlhjSk1POWJZVVpEXzZrZWVTSnBiLWhYeVF5UVZHNkpZVTJEQjduaVBZYUlPdl85elNQRDByajZZN1cxUVZDaFhKVVdpUzVMeXNRSkF3M0JTNkg5eWZ2c01nckI1bEdrU3AwblUydWN6c1hGY1pXWmFoU1AzTWVLbU41VWtJS2lVR2J2UHk0WGJiRG1leEVCbG12eFVpTTJaNlBiSUk0cnJ0WmVGaHduTWtwalV6d2hUTVB0aVJVaWhnOTVQSTVsVUQwbE1SektoM2FWZFhpX0xwdnM2NjJtT3phODhNbnJjMzNHcGUzVG50U2RyYmVyZU1IaVh1VkpkejJ3UWJ6ZTUtbXhZZ2xiVXlMZnROZ0tR
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: a47451ff-6005-4253-ae44-e79dd668c4e9
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: builder-token-hp4g8
    namespace: data-analytics
    resourceVersion: "4699259525"
    uid: 73ea4df3-58b7-405f-9805-ded526e1aea6
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmlkV2xzWkdWeUxYUnZhMlZ1TFhJNWQySXlJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbUoxYVd4a1pYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmhORGMwTlRGbVppMDJNREExTFRReU5UTXRZV1UwTkMxbE56bGtaRFkyT0dNMFpUa2lMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdGMFlTMWhibUZzZVhScFkzTTZZblZwYkdSbGNpSjkuQjliNlpBS3lGVUp0ZnZFSHFtcWRZSFpnN1RfWGRqSEd6d0tQSWJhNFVYOTlaUVFmcUdjWFJMRk1qUU5xcEphUzAyVEdGdjBIQW9hRUZIdjRnYUY0cDd4R3FrTmR6Vmx0ell3ck9yZmNDWk9rbHVrNE42UjIzRGtQMkJFMjZPTXI3WDljMXEtTk9NY18ta3pySWJSTjh4Sm0xQkhSSm95NGc2azN1LUl6ZHVWMWk5aG42V184cUNVdHVlTXNVT3lTcGpJWXZ5eU8wcy1xWmx4M1JXTnhmTmFZNzcwb0liSVhJRUdHNEd6WFFDTm5KNDR1UVJNTVRVSTY1YWhhdUx0WjFMOThCcGozUHhqRnpHaDVqdzJmREZrMTZlVU4ycUJ0U2lBaFNMZGIwNmkwNU4xRG94V01HakZna2xJbnd4c3dPbHdQdDU5MGJVeS14Sl82Q3M5c0lB
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: a47451ff-6005-4253-ae44-e79dd668c4e9
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: builder-token-r9wb2
    namespace: data-analytics
    resourceVersion: "4699256724"
    uid: bb015abb-5ab8-47c8-b128-60cd1c2e6eab
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    WebHookSecretKey: OTMyYjYzYjY3MWQ0YWY1NQ==
  kind: Secret
  metadata:
    creationTimestamp: "2023-09-08T11:57:47Z"
    labels:
      app: cdh-callfinder-sftp-app
      app.kubernetes.io/component: cdh-callfinder-sftp-app
      app.kubernetes.io/instance: cdh-callfinder-sftp-app
      app.kubernetes.io/name: cdh-callfinder-sftp-app
      app.kubernetes.io/part-of: cdh-callfinder
    name: cdh-callfinder-sftp-app-bitbucket-webhook-secret
    namespace: data-analytics
    resourceVersion: "2518804563"
    uid: 479515d2-9efd-430c-8534-a52fa929c48a
  type: Opaque
- apiVersion: v1
  data:
    WebHookSecretKey: YWNiNDI0MjRlYzliNWNlZA==
  kind: Secret
  metadata:
    creationTimestamp: "2023-09-08T11:57:47Z"
    labels:
      app: cdh-callfinder-sftp-app
      app.kubernetes.io/component: cdh-callfinder-sftp-app
      app.kubernetes.io/instance: cdh-callfinder-sftp-app
      app.kubernetes.io/name: cdh-callfinder-sftp-app
      app.kubernetes.io/part-of: cdh-callfinder
    name: cdh-callfinder-sftp-app-generic-webhook-secret
    namespace: data-analytics
    resourceVersion: "2518804551"
    uid: 3a63e3e7-9a35-4fdd-b8d3-8ea5722ad26e
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: b83780b3-dc9f-47d4-8a01-8747bf564256
      openshift.io/token-secret.name: default-token-b77zg
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkYXRhLWFuYWx5dGljcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZWZhdWx0LXRva2VuLWI3N3pnIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJiODM3ODBiMy1kYzlmLTQ3ZDQtOGEwMS04NzQ3YmY1NjQyNTYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGF0YS1hbmFseXRpY3M6ZGVmYXVsdCJ9.gc8DcA5qqBqb9XL_2Of_CKygmb3KUQHSODl75HolIF20m1kUlk2gWQOpnnTWqkxiPtscsBJNdzR_WJOC6RsTeSrrCPEoTN0Al36PlN9M93ZIltb1BcOufjxuH-3lVVOL6w5ywLzFZwoNjZiu_tCY4P-01cfoigoMFFO8X5Kk-96xduo219HFQCuKsiXBq26SQerQz92QT3gSNsHTryorNJ3jwMcEaRBJO7j3hnUc0EchLYlLJpEIebKdnOVMrhY_4bVyQRwyQcrV-R8uxZIMNpC5Lbe2dMg7K9akW59dqlVDvzQGRQpsNQHAo33ZRomfNv5LznpFE-Cz-fMdsvC5rA
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: default-dockercfg-d7gsw
    namespace: data-analytics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-b77zg
      uid: ac3236dd-6915-44b1-a270-f00f6be5efe0
    resourceVersion: "451772726"
    uid: ba924d49-0ea9-4882-9e6b-25450e637efd
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5rb2hsZXJjby5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMGIyTndORjlrWVhSaExXRnVZV3g1ZEdsamN5dGtaV1poZFd4ME9rMHlNMVJMVWxsR1dqZEJXVnBEUVVaR1dscFhRelJOTmtzME9GTk5Xa3d4UTA1UFJEWkVTRGhJV0ZKUVIxTTJRVkpPVTBkRU9GcEdVRFJTVmpjMlFrND0ifX19
  kind: Secret
  metadata:
    creationTimestamp: "2023-05-14T18:01:09Z"
    name: default-quay-openshiftocp4
    namespace: data-analytics
    resourceVersion: "2008514128"
    uid: 78688570-a145-4b9f-b84d-7886f2feb5d6
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaV1poZFd4MExYUnZhMlZ1TFdJMWJXTTNJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbVJsWm1GMWJIUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmlPRE0zT0RCaU15MWtZemxtTFRRM1pEUXRPR0V3TVMwNE56UTNZbVkxTmpReU5UWWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdGMFlTMWhibUZzZVhScFkzTTZaR1ZtWVhWc2RDSjkuSjAxcEpqY2RqTlBoUWsxS25LeHRpaWFMS0dyNl80ZmFDVlc1VHR4bDZ3Yi11amhoU0NwVmZFMnhFQUV0ZjFQSlQ0VWlmMnZ0LVFtTFMxaTBSVDBzc2JoSkFxUDdqWUFkM28xOWxybzR1TFRtakh1eThpWUdxYl9idzA5a0VwLXNfR0NVczdQai1yNFNobG13NjVrTVdzQzNOdHBDOEVVSm9CWFVhR196RzYxQTRFWE8zYl92bGJET3dQTHZkRm5FZmVsc09SaDVfejZ1UHE1SE5WTE0wSGdYTzFSNm5WN3BaM0dWVE5fVXA3eURLdWZNVWlIQjVWSlluczFaU0tPSHRYNUdHRUctdkNDc1Bta292X25uejRxWEVZV3doNVN1dzdIR1Y2VVRBdkwxbU1jOWdJS2Q1WE5IUkRtN0F3WlN6Z1lOeFdubjl3NjNKUEZCdnRwbXFR
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: b83780b3-dc9f-47d4-8a01-8747bf564256
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: default-token-b5mc7
    namespace: data-analytics
    resourceVersion: "4699257065"
    uid: 625baf67-56ef-4d21-9384-048cf4156aa1
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaV1poZFd4MExYUnZhMlZ1TFdJM04zcG5JaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbVJsWm1GMWJIUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmlPRE0zT0RCaU15MWtZemxtTFRRM1pEUXRPR0V3TVMwNE56UTNZbVkxTmpReU5UWWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdGMFlTMWhibUZzZVhScFkzTTZaR1ZtWVhWc2RDSjkuZ2M4RGNBNXFxQnFiOVhMXzJPZl9DS3lnbWIzS1VRSFNPRGw3NUhvbElGMjBtMWtVbGsyZ1dRT3BublRXcWt4aVB0c2NzQkpOZHpSX1dKT0M2UnNUZVNyckNQRW9UTjBBbDM2UGxOOU05M1pJbHRiMUJjT3Vmanh1SC0zbFZWT0w2dzV5d0x6Rlp3b05qWml1X3RDWTRQLTAxY2ZvaWdvTUZGTzhYNUtrLTk2eGR1bzIxOUhGUUN1S3NpWEJxMjZTUWVyUXo5MlFUM2dTTnNIVHJ5b3JOSjNqd01jRWFSQkpPN2ozaG5VYzBFY2hMWWxMSnBFSWViS2RuT1ZNcmhZXzRiVnlRUnd5UWNyVi1SOHV4WklNTnBDNUxiZTJkTWc3Szlha1c1OWRxbFZEdnpRR1JRcHNOUUhBbzMzWlJvbWZOdjVMem5wRkUtQ3otZk1kc3ZDNXJB
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: b83780b3-dc9f-47d4-8a01-8747bf564256
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: default-token-b77zg
    namespace: data-analytics
    resourceVersion: "4699256395"
    uid: ac3236dd-6915-44b1-a270-f00f6be5efe0
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 78737146-05f0-4a0a-b627-7717bc5a2015
      openshift.io/token-secret.name: deployer-token-cw76z
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkYXRhLWFuYWx5dGljcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZXBsb3llci10b2tlbi1jdzc2eiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZXBsb3llciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6Ijc4NzM3MTQ2LTA1ZjAtNGEwYS1iNjI3LTc3MTdiYzVhMjAxNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkYXRhLWFuYWx5dGljczpkZXBsb3llciJ9.C3NMRFj0CRXORT9kzO_8nV99AwPIVHaPhln9MnbhqPkkf9GQBUFkl7FTpl9KU5okjVR8knvt_nh5wdyqLzgYvWf87BTwdY32sofw9VrWuTsiAkh__fz3SmLLwMDTh89_o7FAf3jJJDAZIFC1tnJhDHsmpWrbwAN_4uBHFQb8Phxu_nivUhDXI3dkkctJYyOzy8MpqKGbtcNSsFehpvKRxqQPa1RapieMW-Ddq0L4E6R1x20ZfrmuCvZCx3rh85kBYrM6Qd7xCeI351jWggYLammdq3rgctsIMdhgWsEb67WDcG2Ec7cxIhk3SLB6_to_gFnOFQs1pVJPo_0KXF4r6w
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: deployer-dockercfg-x7ksn
    namespace: data-analytics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-cw76z
      uid: 4c0ef16a-a850-41c8-86e0-971d52765ec2
    resourceVersion: "451772629"
    uid: c0e7e537-ca4a-4e8c-ad44-532010c4320a
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5rb2hsZXJjby5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMGIyTndORjlrWVhSaExXRnVZV3g1ZEdsamN5dGtaWEJzYjNsbGNqcEJSVkpRUWtoRU0wWkROMEpSVGpGS1YxazJNa0V3UjA4MVFsWkVXVGsxTTFGT00wbGFOVmhaUmtwSE1FazBXRGRTVEZSRU5UbFdTRmhLUTAwelMwbEgifX19
  kind: Secret
  metadata:
    creationTimestamp: "2023-05-14T18:01:09Z"
    name: deployer-quay-openshiftocp4
    namespace: data-analytics
    resourceVersion: "2008514130"
    uid: 7ab338c6-026b-41f1-9590-cf24e31aed95
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaWEJzYjNsbGNpMTBiMnRsYmkxaWFHWnpiQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUprWlhCc2IzbGxjaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamM0TnpNM01UUTJMVEExWmpBdE5HRXdZUzFpTmpJM0xUYzNNVGRpWXpWaE1qQXhOU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1lYUmhMV0Z1WVd4NWRHbGpjenBrWlhCc2IzbGxjaUo5Lm9TZHNZVnpOMzlfdEVIMkttWVVOdG1kaklNcHBFZi1fR2R2bHNvT0p1WDZMWXVlQkVXVnU5Y3pRaVNmeVNZcGUtcm9LMThadmpYaDJZNnY3UzhJYzZLSkNHMmFQemxzTEw5OW5uNk15ZnotejFlUmFBS0ZHZUJJSV9FeWJtVEFvNFVIY0M4cjJZdGpvUjU4ZUYxaXltV0VUNmtob1JwN0FoU2tIek9UaXBqUHlNbVNjWWZ2Y0tKb0g0NlNkaG5TY2JUdnVIQ0xhQ2tSUTBVRkxvdlZQcDl6RTlnN3RyYXJseWxMQ0gySXZ4WlVja01pU2tIcmM3cWJBcXU4Y0lrd1JBX21jVGlxZVJicE51aWtOSjJneDJTSnYxbDZtSm96cGNSd0xXUUVhMF9NTzA4a3lPRmNOLWFCZU9Xc2hBbW9Bd2VDR3dtaE5Rbm1JWkJLRnl0VWU1UQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 78737146-05f0-4a0a-b627-7717bc5a2015
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: deployer-token-bhfsl
    namespace: data-analytics
    resourceVersion: "4699258421"
    uid: 5c845a8c-3974-4412-8c8f-27e52c9d16a6
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaWEJzYjNsbGNpMTBiMnRsYmkxamR6YzJlaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUprWlhCc2IzbGxjaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamM0TnpNM01UUTJMVEExWmpBdE5HRXdZUzFpTmpJM0xUYzNNVGRpWXpWaE1qQXhOU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1lYUmhMV0Z1WVd4NWRHbGpjenBrWlhCc2IzbGxjaUo5LkMzTk1SRmowQ1JYT1JUOWt6T184blY5OUF3UElWSGFQaGxuOU1uYmhxUGtrZjlHUUJVRmtsN0ZUcGw5S1U1b2tqVlI4a252dF9uaDV3ZHlxTHpnWXZXZjg3QlR3ZFkzMnNvZnc5VnJXdVRzaUFraF9fZnozU21MTHdNRFRoODlfbzdGQWYzakpKREFaSUZDMXRuSmhESHNtcFdyYndBTl80dUJIRlFiOFBoeHVfbml2VWhEWEkzZGtrY3RKWXlPenk4TXBxS0didGNOU3NGZWhwdktSeHFRUGExUmFwaWVNVy1EZHEwTDRFNlIxeDIwWmZybXVDdlpDeDNyaDg1a0JZck02UWQ3eENlSTM1MWpXZ2dZTGFtbWRxM3JnY3RzSU1kaGdXc0ViNjdXRGNHMkVjN2N4SWhrM1NMQjZfdG9fZ0ZuT0ZRczFwVkpQb18wS1hGNHI2dw==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 78737146-05f0-4a0a-b627-7717bc5a2015
    creationTimestamp: "2021-06-15T12:14:33Z"
    name: deployer-token-cw76z
    namespace: data-analytics
    resourceVersion: "4699257496"
    uid: 4c0ef16a-a850-41c8-86e0-971d52765ec2
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: pipeline
      kubernetes.io/service-account.uid: 871191c7-a26b-41af-95d5-0b92a078b792
      openshift.io/token-secret.name: pipeline-token-x425q
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkYXRhLWFuYWx5dGljcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJwaXBlbGluZS10b2tlbi14NDI1cSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJwaXBlbGluZSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6Ijg3MTE5MWM3LWEyNmItNDFhZi05NWQ1LTBiOTJhMDc4Yjc5MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkYXRhLWFuYWx5dGljczpwaXBlbGluZSJ9.cVQYwYZTEsQ9lmB8hdqHJxYYyoLkDumpU_vFuUroQh32plPFlOuM7q-MC-gqhAPKTnxMeVDBrvcBMGZbPrIszmUoTc57Cm30V7pf2yZVTfDeFf0hKBH1TMnOqj_8DSKAy6WaSKb7muV0-N6RcUPM-j_ktfXBp7aK30moK56x5Wn10dBtePhqdvjSDF2dief-KWWWQURSpHcJ6S8ohaP-8TN1EJe_UUyjfgMgfH7CGhGtSEhz-ttT39OwgrvwXfhdFcW9BmkAKGiuaR0K1V2YqovHpRzBhSbf0BPnmOJAIA5X4j2cECOrFCkUtc96x6_y3reTqCsP5upEr4_WqgYTdA
    creationTimestamp: "2022-12-01T01:07:13Z"
    name: pipeline-dockercfg-s5n7s
    namespace: data-analytics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: pipeline-token-x425q
      uid: 5fc0e903-732a-4f61-8aa1-c56a6f78e6e4
    resourceVersion: "1137374984"
    uid: 02868865-f5f2-4beb-9330-da0ec771f765
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVTF4SjY2Y21DUFV3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd09USTVNakV5TURVeldoY05NekF3T1RJM01qRXlNRFV6V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFpuQTIvVFdzRjE2eUlNZDNFMmZkaTM4am9BT0pxQwptamxIRmJnRzZPVnk2aDdXV2RMajhQMDhMUVZhcUNpYjRXUG9KWjZwc3BMRzYwUlZBMWNraDZLZWFXK2pFZkh1Cm9OV1BuaVNCUG5sL3M2bDNWT0ZRcjRkMUEvV293c1ZOeTNGVXNRNU1FQWtSc3dkTjcyUE1ISHpTOUNCRVVXSVgKNFZuRnpuTmk0Wm02ajU0dE9zUHNKcDhwWTRVMjg3em02QjltMDRkRUZpZlFRUkpuWDd1aHFEWFlraFNYVGVlWAo2bE1IY1NmcHUwbVY0NXdRN253WFMvcHZiNEl5c0VncUNDSFJYL0hCMkdaYit4aWd5bEF1VjdDcjM4aVJINHIxClVpc3BNOVVRV1lqMkhTZ1EvMEVFZWZGeVhoZjRISU5nSSswWEQrR3ZBYU5Rb0xZM2lqbXJFQTBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJxSwpCdXVWcUxOZFQ1K2ZuTnJXSnNmU0doVnRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUMxTXpSUThrb29BSjAzCjg0UnBmNFRQZk0zVWl3QzdHam54RGhkUE9ORzdmcm82dWw5VG9qL1d5aXB5TVFFSzZjRHNUSktJWWE1cFVTRFAKNDlZd3pLeDFvL0RQMWNsMXFIUlZQSE9HR3JOVE9pSTdqeVIyZDBxQjVRZ1kzKzV5VGVJTjZtTTd1TWliSmpjSgpZbVZDOWtwWVZ0Umk2MURIaEI0VVlyZ2tOaDdwVTJLQS9tVDQvclJvTXE1cDVoQ3c4eDV1L1NodXZRdk0xdENNCmc5aE5BSDVFNzJObUl0QitjTXMxRTY1WG9yM2JzUFFpMWRZMVVHK09UcnA3RkpnbUtFZVhGL2JEbXpSVlMveHMKblQzVFJQQTVDeGhBb3gzVGlsMGx5aFNGVFdkYytVSmNvaEtMY3NUZS9RdXh1b2ZRcWxlNi9rM3JOQTNNSjVvMgpNcW5RaWN0bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSVhqRkhsT1JrMEYwd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01Ea3lPVEl4TWpBMU1sb1hEVE13TURreU56SXhNakExTWxvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6OTFvT0phQ3V3RkIKdElkQ1FKM3VjV05FaFdOUHN4N2dTZ3czY2Zac2p4K09zdTlIWHp2eXpMenpIUWl5T0FOTlFFM1BiVmtaVHZrVwpCQTdSbGt5djNEcDc3OWJjakpEaFFINnJmUEdaMnkzQ2RnVDlubURRakxITnozbGxvYWxiOFpUVnFtK0xKV05sCmIyMWVuakYrTnc4YmVwRXBVMXorSGxVL3djQzZTWWpCSEQ5aUJkbE1MQWI0NStza1dpdjNBWlZYZVM1MGlOVGwKbHFxSHY1RFBqNW5xRXJoYmdVTTZsRlQvZ2lpbEV4WnVPRldWaVRBK3N3S1VPUnpDTXpxV0gwVkRLeTFHTkd5dQpvMHo4eUNrdUpIdjFTUnlyOWQwNXlkazVuL3d6V2RlSVNkZGJsU1JYaTkwNEhTL054aHFyRFhrMHRVRE05YUM5Ck0vMzZwMnVMVndJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWNWYXZXeG5zZW9tTDhvbldWVHZTcjRDTlBhNHdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUE5R0lUUTFGYmVuZFplYytheTBmMmZPRjgvTi80MVN5NVg0MFlEKzhXWHJkdllhUjYyNUlxTml4WllECklFZHF5dTN0MnlDNnBZMFBqUk1wMzNaOFVVZFhFY1Y5RnRkYWRDVG5OeGJwYWpGcVNnNytzMDZ6K3g1YWtNNXQKaXNuclZCZ1RuZUExcTdnTWRuaC90cEN1OFRJMUxLNGg4SkJFd1R2bDBpSFNpUjNYT0g0eXZiWHYrTVB5UmhhTgp5emNZTHN3ZFRUbTNWMVNLY2hpL3JLWXh2YkI2OWcrNUZnTHFNTjFjL3NFelJObFFmQm0valowQkVyVkREeU16CkdNQStsVkV1Y3ZOMmV5R2dXcjdhQ1pzVTR3UERTcFFVUlhPRkcxTmhIS2s4R0lEUWp6TEJnVXJ4dVdrOEx3czIKVk56ZTNRVEZFOUVsOU1SWFR0eVdLR1JHZDF3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVlReGNmQng0Qzlrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURreU9USXhNakExTTFvWERUTXdNRGt5TnpJeE1qQTFNMW93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXhBS04xSC9yOGRiQ3BjMFdkVytnTjhlN1R1QmtaRGJGYjBBYklTMnliNktDNC9xeVpwVzgyQ3JHYzZEawo5UHFBUGorZGwzNy9ycG1UYmsxcEJjakhsOW9vek9kdU5DeFd6SU5SRG5wL2ZjY1R3b2k2bkxsaGpUcW9LRlNqCmxJeUlHRVVPaUV4T1BNaVFXQUF5TVdPdHJYTVlUaUJXQ0gxNjR2UmVPK2VaUnlua3BLdUZtK3VYR1Y3TWZLOGsKOXFyUU5telpqTzRrcUxaOGlwRmxDTTdHaWpkZk9lWFJpamJYc3pRWUpBdUtrTjdnWUwzNGRzbEVFSjJacUtsdwpLL2Nzd1Q5dmh3RlkyZDBEVnNYMW9peVVDeXFQVjZBUFVFM2wwR0pISU5xdERDek5lMXl1bkFuNStGWU1zQ25GCnRZY1N3WU14Y3JuYWRRbUV1RnR4VWx2Zzd3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVOOE1PVTQxTzJVRWFENWp6SkdCc2Zaa2tqZDB3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJalFrZC95a1dUYWhaaXhxS254c0hmQjJIR3BWVVV1QldxRjllVU96Zzc5CnFHcWNJOEZqOVlvLzUwcDd4TUZQc1J6K3YxbWxhTHlEYWFrTjNlL2t2TGlydlVxb1NIMmJHdEZzcnh6MlBXVEoKYXY0Tkg1dTd1YkhhZEtEMmo1MmNpeld6V29XTzF0Z1pEUmdZelZ2anVrek9WOUw5Vm5CS2ZOWFN5akFScFd0MQpFcTVTMHZZR0xvTndhQXlMTUNxU3pPS1YrUFdqcHV4R0t2YnEreFR1Rms0T2tTU0NKYmJxZ05CeEhMS0E0clZRCjFjVzRFRFNhKzZCeHpGK0Rsa1A3YjBKZHR5bzhURzJ2a2tqK0JrVVFPbU1LODZhZ25OUjFzNW41OURkbGYzazIKNUNZQ3U0cTNtN21oNWY2aDB6bnZxeUN5d2xlMWNOdG5wRVdoVlY3ZlE4cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUladzdpWWRYRU5Ka3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TmpBeE5ERTJNalU1TUI0WERUSXdNRGt5T1RJeE5UQTEKT0ZvWERUTXdNRGt5TnpJeE5UQTFPVm93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOakF4TkRFMk1qVTVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQThaMkUKaSs5cXJzdmUvMXdYU2k3NXRpL0pyRlJYbmRUQzliWVEvM1kwSVJBMXdDRVNlczBOQW5RM1dJYkRUbFpqRGxpZQp2aWJ1bzhoZlVJL2JKRHhWVnBjaWd1T2VmczBsTFRDWFp0Smk4VW5RWVIxWTZLWHBVUUY0TDZJUE5uMG5zOVhTCnAwamw0OFo2eXR4UXZqdEc1OFpPZkR2MG5FenlDREt4RTRPRjlmV2l3OUJ5Wjhvb0hoOHh4ejF0Z1FXUmxlT2EKVDlpMXU0ekxTalY1Y3IwMWxyTC9CeTRRdUpxZ0tJQkdMMFRzVFROQ1JRRG1iWXFLemZpdGMyTHFYUG1TWmppRAp2Q1FhWmZaRGdBYmV2cUtUOFl3VGxPSVFXcm5tMFA5SWMvSUFHTXU4N2ZOdS9yZEVlRWluTmF1dUxGM01qcXhpClBIWUJhd0NkKzZiUFFZOGhxd0lEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVTEgyYVNrMFlUN3VpZnFrMC9DcWFvY1UxSndZd0h3WURWUjBqQkJndwpGb0FVTEgyYVNrMFlUN3VpZnFrMC9DcWFvY1UxSndZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJb3l6Z1lrCm9wL05pUzl5V2YzZlhHQmlvbnF5cEt6UEd1a0RpdVVNTk5jYWo1eGRWLzRXUWhCY3BlamxDVmZTSmtGT09NdzUKbHp6cHAxRjZ4L2FSUkVyeE9NQ2dJbSt5bmdvekFxVk04bDhuYWJ2VkFUVHBodDNxQ3licFNUNVNMWTRKbHltRQppb1lueXlabFVVcmxtMDcwVmE1SW9peDlrVEtpYklFWW95eWU0M0FhcjYyelJWNmdhUmovcU9RK1NzNmo3eFJHCmI5WkhEcXdCRHdwWm5lOS9QWDU4L1Uwc1ZkNC8vd2hjM0lhQ1NWdWpSNXQ2RHlGdFpraHhqc1NRcUhKdG04d1gKdlpDRTBUeVdURkFYNGZVYk5DVzF2cnNUczc4Sm8xaVNVWGFuc3BkZ29vcTVBNzgwYmdSU00wejJORHFvTGd1YwpndUpna3h2WXpNWUhOaFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdwRENDQll5Z0F3SUJBZ0lRWVR2dVZNMzVOSEVTMStSbmdSOXhiekFOQmdrcWhraUc5dzBCQVFzRkFEQ0IKdWpFTE1Ba0dBMVVFQmhNQ1ZWTXhGakFVQmdOVkJBb1REVVZ1ZEhKMWMzUXNJRWx1WXk0eEtEQW1CZ05WQkFzVApIMU5sWlNCM2QzY3VaVzUwY25WemRDNXVaWFF2YkdWbllXd3RkR1Z5YlhNeE9UQTNCZ05WQkFzVE1DaGpLU0F5Ck1ERXlJRVZ1ZEhKMWMzUXNJRWx1WXk0Z0xTQm1iM0lnWVhWMGFHOXlhWHBsWkNCMWMyVWdiMjVzZVRFdU1Dd0cKQTFVRUF4TWxSVzUwY25WemRDQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVNBdElFd3hTekFlRncweQpOREE0TWpZeE9ESXlOVFJhRncweU5UQTVNVFF4T0RJeU5UTmFNR294Q3pBSkJnTlZCQVlUQWxWVE1SSXdFQVlEClZRUUlFd2xYYVhOamIyNXphVzR4RHpBTkJnTlZCQWNUQmt0dmFHeGxjakVUTUJFR0ExVUVDaE1LUzI5b2JHVnkKSUVOdkxqRWhNQjhHQTFVRUF3d1lLaTVoY0hCekxtOWpjRFF1YTI5b2JHVnlZMjh1WTI5dE1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJKMThxTnA5WWFNaEFRWnFERGZ3enNQVUpkT0VYcXQrCi9sdW1xMnFGTGZBcGhDNFBJbkNqYmhacVlMT0RxSVNJeUs3ZjhNbjhOMlR1OUY4WnIzY1dIWjN3a1E2REJ2VSsKS1RmeVY2cWVFSWJxcFlsd05FV1c0N1VBaWdwTHJpRVViVnc4YTZRd3p6a3duTjEyb1ZRY2ZyNlFMeUFQVDhoVgpXcXQ2bmdqZWVVUkI3OGxBWUpDcTFIaHMvK3BLc3l0YitIdEJSTE8vWkEwVHBFZi9FdlhrSTZRdFlldjBPUThiCmpERmUzaXY4d1B1UUhSOUZyT29meFJLVlpTcWUrcUpaN0RwSWJiUklQQjk5MzR5U2VIcWEyYmtacFUvMERaaSsKaUx0VHZxZjFTbm5rVmh0OEtDbEFvL2FHVVUzd3hiakVFSmsrWEs4TFFqZmRVN1ZvT2FicjR3SURBUUFCbzRJQwo4ekNDQXU4d0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVVFhnT0FudW1XckQ2TWhkMnJlMUdiM3QrCjhGQXdId1lEVlIwakJCZ3dGb0FVZ3FKd2ROMjhVei9QZTlUM3pYK25ZTVlLVEw4d2FBWUlLd1lCQlFVSEFRRUUKWERCYU1DTUdDQ3NHQVFVRkJ6QUJoaGRvZEhSd09pOHZiMk56Y0M1bGJuUnlkWE4wTG01bGREQXpCZ2dyQmdFRgpCUWN3QW9ZbmFIUjBjRG92TDJGcFlTNWxiblJ5ZFhOMExtNWxkQzlzTVdzdFkyaGhhVzR5TlRZdVkyVnlNRE1HCkExVWRId1FzTUNvd0tLQW1vQ1NHSW1oMGRIQTZMeTlqY213dVpXNTBjblZ6ZEM1dVpYUXZiR1YyWld3eGF5NWoKY213d093WURWUjBSQkRRd01vSVlLaTVoY0hCekxtOWpjRFF1YTI5b2JHVnlZMjh1WTI5dGdoWmhjSEJ6TG05agpjRFF1YTI5b2JHVnlZMjh1WTI5dE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGCkJRY0RBUVlJS3dZQkJRVUhBd0l3RXdZRFZSMGdCQXd3Q2pBSUJnWm5nUXdCQWdJd2dnRjlCZ29yQmdFRUFkWjUKQWdRQ0JJSUJiUVNDQVdrQlp3QjFBQm9FLzBuUVZCMUFyL2FndzcveDJNUm5MMDdzN2lOQWFKaHJGMEF1M0lsOQpBQUFCa1kvdFBOVUFBQVFEQUVZd1JBSWdhSmFieXZUazl4Y2gyaFdPWmlYQTlXWTBmR1ZjV0Q0TzV1R0NvWGpxCm9vc0NJSHlQbkxkMnl1ZElNMDNMTXVyc2ZQMkJCYytIUUlrZ1NTeTgwQnZ6emhoeUFIVUFEZUh5TUN2VERjRkEKWWhJSjZsVXUvRWQwZkxIWDZURHZEa0lldEg1T3FqUUFBQUdSaiswOUJBQUFCQU1BUmpCRUFpQlZLZDk1dmx2VApqUlBSd3A4OEFLdEk3ZFowUkZicEp0NHhZUlVGTmMxd25RSWdmMXVSdC9GeW4wbWdpbkdZYlI0ZXpHR2x5OUlnCnZsTzhVUjc1R2tJVk1KNEFkd0FTOFU0MHZWTnlUSVFHR2NPUFAzb1QrT2UxWW9lSW5HMHdCWVRyNVlZbU9nQUEKQVpHUDdUejJBQUFFQXdCSU1FWUNJUUM5VnpZWWR0dGpMdUZDZHQvbDBOekNjdURFSXNYN2FicGJlSjBaTEZyYgpyd0loQUpGQWlleDBUM08wYkFQM2NtbUQyMWNEbDVVNDNUVnlGS042c2dLWjZRUWhNQTBHQ1NxR1NJYjNEUUVCCkN3VUFBNElCQVFBQ3FjRnhZdjdrWldhQy95UEx0UFI2T0x6NWM3NGJnbVFsVG1xQnlZQU11cmNYUVZFMmExWmYKYy9jTUhsYW1rbGhQNEw0V2psWEt3NEtLRVZ0MG1jM2hzcmgrYXZtWGliKzZvaVlPQ3lOOEdMWkxBVEhubVdQZQprL25SU1RTdk1BNmpydHZZRlUxb245MTRBdC9BV2tvT3RHQ0JNOFpFLzJSTDBJZTQ2NlZVVEVOZmtXYkRtcHRFCkh6K0FVRHBaRCtreHJXU0czRDFhL0NKRGhKK2drbTdhcUVPTFMvTzdlc1VyTE1QNnA2TFg5TytTeVFDeTNDUXgKb3M5Vy9ydEQ2a0NYZlNlSEJJZTM2QU5sTm1jT3lRYTlvWjI0ZkdmeDhtdXFxSEZLWWNMdUVyWEJjS3BzZnRkcwptK0lFK2tnVFNNSWxtMllLdzBPU1lwaktKWjNOT0FiTwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSndhWEJsYkdsdVpTMTBiMnRsYmkwNE4ySTNPU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUp3YVhCbGJHbHVaU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamczTVRFNU1XTTNMV0V5Tm1JdE5ERmhaaTA1TldRMUxUQmlPVEpoTURjNFlqYzVNaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1lYUmhMV0Z1WVd4NWRHbGpjenB3YVhCbGJHbHVaU0o5LnNGUlBlM0w2a0V2dENKa3JJSndUNV9INmFzUUR0WkVGZ1FKUzdhYWJOajFMMW1WOGtLRlpxLWJDSmJFT0ZYQ1lGUl81bnBzaUE1RWhQRTJGWFExVTNrU0hIUVdjRzlXVFZuem1mRE5Sci1Kd0NMSFJob2NzQTlDRURZNjkwLTJHb01NM0d0NDdyNk5senFCdm5ReGpuTlhoWVdVcEJ2TnZiamVxZHFwWTE4YmxCa0tQRGJ4MlZhaVBaNmNPbFhLWnFQMWN3V19ySzllRTdBd09PRjJiUzM0MkNtWHF1MUxWaUJ0aEFBTkE0SWw3bmpJLUZlUlFvM1dDX3Y4VjhTWnhZQkwtUEh6VDVWUEdxZ2RCTElpNnc2dWh1WXIyZU52VnRxSW1UMU9Fa0hndFdaU1Y0aVAycm02RGUwa0J6c1pCQW9ZeWlfVHBZQWRnc3RRUVQ3N2U3UQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: pipeline
      kubernetes.io/service-account.uid: 871191c7-a26b-41af-95d5-0b92a078b792
    creationTimestamp: "2022-12-01T01:07:13Z"
    name: pipeline-token-87b79
    namespace: data-analytics
    resourceVersion: "4699259727"
    uid: c92fd870-b0af-404b-acff-802a6ed54a61
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSndhWEJsYkdsdVpTMTBiMnRsYmkxNE5ESTFjU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUp3YVhCbGJHbHVaU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamczTVRFNU1XTTNMV0V5Tm1JdE5ERmhaaTA1TldRMUxUQmlPVEpoTURjNFlqYzVNaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1lYUmhMV0Z1WVd4NWRHbGpjenB3YVhCbGJHbHVaU0o5LmNWUVl3WVpURXNROWxtQjhoZHFISnhZWXlvTGtEdW1wVV92RnVVcm9RaDMycGxQRmxPdU03cS1NQy1ncWhBUEtUbnhNZVZEQnJ2Y0JNR1piUHJJc3ptVW9UYzU3Q20zMFY3cGYyeVpWVGZEZUZmMGhLQkgxVE1uT3FqXzhEU0tBeTZXYVNLYjdtdVYwLU42UmNVUE0tal9rdGZYQnA3YUszMG1vSzU2eDVXbjEwZEJ0ZVBocWR2alNERjJkaWVmLUtXV1dRVVJTcEhjSjZTOG9oYVAtOFROMUVKZV9VVXlqZmdNZ2ZIN0NHaEd0U0Voei10dFQzOU93Z3J2d1hmaGRGY1c5Qm1rQUtHaXVhUjBLMVYyWXFvdkhwUnpCaFNiZjBCUG5tT0pBSUE1WDRqMmNFQ09yRkNrVXRjOTZ4Nl95M3JlVHFDc1A1dXBFcjRfV3FnWVRkQQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: pipeline
      kubernetes.io/service-account.uid: 871191c7-a26b-41af-95d5-0b92a078b792
    creationTimestamp: "2022-12-01T01:07:13Z"
    name: pipeline-token-x425q
    namespace: data-analytics
    resourceVersion: "4699259165"
    uid: 5fc0e903-732a-4f61-8aa1-c56a6f78e6e4
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    WebHookSecretKey: NzlhNjFmYzFjNjQ1MDc5Nw==
  kind: Secret
  metadata:
    creationTimestamp: "2023-08-29T16:02:25Z"
    labels:
      app: sci-scorecard-dev-stage1
      app.kubernetes.io/component: sci-scorecard-dev-stage1
      app.kubernetes.io/instance: sci-scorecard-dev-stage1
      app.kubernetes.io/name: sci-scorecard-dev-stage1
      app.kubernetes.io/part-of: sci-scorecard
    name: sci-scorecard-dev-stage1-bitbucket-webhook-secret
    namespace: data-analytics
    resourceVersion: "2474726171"
    uid: e1eab8c7-f7da-4467-b98a-a22007a178b1
  type: Opaque
- apiVersion: v1
  data:
    WebHookSecretKey: NjRjMDU1YjU5NzJhNjlmMg==
  kind: Secret
  metadata:
    creationTimestamp: "2023-08-29T16:02:25Z"
    labels:
      app: sci-scorecard-dev-stage1
      app.kubernetes.io/component: sci-scorecard-dev-stage1
      app.kubernetes.io/instance: sci-scorecard-dev-stage1
      app.kubernetes.io/name: sci-scorecard-dev-stage1
      app.kubernetes.io/part-of: sci-scorecard
    name: sci-scorecard-dev-stage1-generic-webhook-secret
    namespace: data-analytics
    resourceVersion: "2474726169"
    uid: 04609a44-8ea5-4f3c-80c6-cddc68364d12
  type: Opaque
- apiVersion: v1
  data:
    WebHookSecretKey: MTQ3YmRmNTI2Yjc2M2JmZA==
  kind: Secret
  metadata:
    creationTimestamp: "2021-09-14T17:54:46Z"
    name: sftp-data-lake-app1-bitbucket-webhook-secret
    namespace: data-analytics
    resourceVersion: "491250467"
    uid: f2aa8044-3317-4908-b280-32144698dcf9
  type: Opaque
- apiVersion: v1
  data:
    WebHookSecretKey: Y2Y2MzA1MDdkNGVkOWMxNQ==
  kind: Secret
  metadata:
    creationTimestamp: "2021-09-14T17:54:45Z"
    name: sftp-data-lake-app1-generic-webhook-secret
    namespace: data-analytics
    resourceVersion: "491250445"
    uid: ecf3f2bd-60d1-4679-b492-cb6fca46ace1
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: useroot
      kubernetes.io/service-account.uid: e7ed9d55-38b2-4ad4-8d95-de50eca59662
      openshift.io/token-secret.name: useroot-token-nt497
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkYXRhLWFuYWx5dGljcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ1c2Vyb290LXRva2VuLW50NDk3Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InVzZXJvb3QiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJlN2VkOWQ1NS0zOGIyLTRhZDQtOGQ5NS1kZTUwZWNhNTk2NjIiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGF0YS1hbmFseXRpY3M6dXNlcm9vdCJ9.kOQZQXFMqYhjewrigd_DJSIRydxf7TMWJQxpAN_uRTfbaXyD_hW8s62k7E0_vmETWKfDrZ9vehCtOagPLvfVHf_OxAlkPJbngm7hh3fiEuR45bSFuzxtOismDp0wbpMzO4-IMcs-mdOqI2MYZaeKNE45tc9kBbtyFFUlUJ_p53EaLZkGcxw5jBc9sKxw3SsKVwh_0Rkp8oOYvw8nE0d-raA2ncI5FCrh4PIKmfQEF1dW5hZlGlpVTbCvVoLVFS0GuXwLyNo3-3BWTukTRplvxcmh7N1uz3-2ZZHlZL_kp5U6lL6dYmNX-iiChh7TV1wbmm91A5LO-xrJQvsSF9GsgA
    creationTimestamp: "2021-06-15T12:17:55Z"
    name: useroot-dockercfg-jdd8g
    namespace: data-analytics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: useroot-token-nt497
      uid: cc6e15a5-7c32-4f70-88a3-3efa2977f52b
    resourceVersion: "451772442"
    uid: 3dd56ea8-41d3-4691-b2ca-bf7f765f3fdc
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSjFjMlZ5YjI5MExYUnZhMlZ1TFc1ME5EazNJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJblZ6WlhKdmIzUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmxOMlZrT1dRMU5TMHpPR0l5TFRSaFpEUXRPR1E1TlMxa1pUVXdaV05oTlRrMk5qSWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdGMFlTMWhibUZzZVhScFkzTTZkWE5sY205dmRDSjkua09RWlFYRk1xWWhqZXdyaWdkX0RKU0lSeWR4ZjdUTVdKUXhwQU5fdVJUZmJhWHlEX2hXOHM2Mms3RTBfdm1FVFdLZkRyWjl2ZWhDdE9hZ1BMdmZWSGZfT3hBbGtQSmJuZ203aGgzZmlFdVI0NWJTRnV6eHRPaXNtRHAwd2JwTXpPNC1JTWNzLW1kT3FJMk1ZWmFlS05FNDV0YzlrQmJ0eUZGVWxVSl9wNTNFYUxaa0djeHc1akJjOXNLeHczU3NLVndoXzBSa3A4b09Zdnc4bkUwZC1yYUEybmNJNUZDcmg0UElLbWZRRUYxZFc1aFpsR2xwVlRiQ3ZWb0xWRlMwR3VYd0x5Tm8zLTNCV1R1a1RScGx2eGNtaDdOMXV6My0yWlpIbFpMX2twNVU2bEw2ZFltTlgtaWlDaGg3VFYxd2JtbTkxQTVMTy14ckpRdnNTRjlHc2dB
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: useroot
      kubernetes.io/service-account.uid: e7ed9d55-38b2-4ad4-8d95-de50eca59662
    creationTimestamp: "2021-06-15T12:17:55Z"
    name: useroot-token-nt497
    namespace: data-analytics
    resourceVersion: "4699259733"
    uid: cc6e15a5-7c32-4f70-88a3-3efa2977f52b
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: ZGF0YS1hbmFseXRpY3M=
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWVhSaExXRnVZV3g1ZEdsamN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSjFjMlZ5YjI5MExYUnZhMlZ1TFhweWJtZHNJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJblZ6WlhKdmIzUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmxOMlZrT1dRMU5TMHpPR0l5TFRSaFpEUXRPR1E1TlMxa1pUVXdaV05oTlRrMk5qSWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WkdGMFlTMWhibUZzZVhScFkzTTZkWE5sY205dmRDSjkuZE81NmJzVHRraWhYb1M4ODQ5WUdlVmdRY0RmZzBvMjJ4dXRfX2o3UGhwZWFBOHRkazA4OVF1RE9McTR3WVNlbHI4Q0tTZHROZlVZaFRMZXl1SmtLdGQ3TG94TE1OWDg1M1RTcUI4ZGR0YzBKLWJKVGtIZF9SWmhjTHV3WjlmUXdxM1RBN0w3Y3dNVzI1WnhwVWluTGowS013Z2t1ZU9KdzQwOC1HSEZZVzNmSXg3bVhPWkJKODhoMFlOcURWUVl0NFNmZW9WRDM5MGN1Mm5RbTRBR3VYZnIwVmIwZjVSbmVIWHdGcGRkSDhLNjI0Q3JyU0kxTEhHZ0hja2UzS2M4Q25MMVJkN3BYVU9wWjdHLVQ1VDZyY01DLXhQTkEtTE1wX05xZ1hLQ0FXRGgteUZ6WHNYU0JXZVRxRVFEV1B4WVF6c1FUQVJ3dWU1NXJxdURUcFB5THFB
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: useroot
      kubernetes.io/service-account.uid: e7ed9d55-38b2-4ad4-8d95-de50eca59662
    creationTimestamp: "2021-06-15T12:17:55Z"
    name: useroot-token-zrngl
    namespace: data-analytics
    resourceVersion: "4699257404"
    uid: 582ef8bc-b2a6-4164-b21d-2bee5f279cdb
  type: kubernetes.io/service-account-token
kind: List
metadata:
  resourceVersion: ""
