apiVersion: v1
items:
  - apiVersion: v1
    data:
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ4ekNDQTYrZ0F3SUJBZ0lDQitRd0RRWUpLb1pJaHZjTkFRRUxCUUF3ZFRFTE1Ba0dBMVVFQmhNQ1ZWTXgKQ3pBSkJnTlZCQWdUQWs1RE1Rd3dDZ1lEVlFRSEV3TlNSRlV4SGpBY0JnTlZCQW9URlUxcFozSmhkR2x2YmlCRgpibWRwYm1WbGNtbHVaekVVTUJJR0ExVUVDeE1MUlc1bmFXNWxaWEpwYm1jeEZUQVRCZ05WQkFNVERHOXdaVzV6CmFHbG1kQzVwYnpBZUZ3MHlOVEEzTWpJeU1qTXdORGRhRncwek5UQTNNakl5TWpNd05EZGFNSFV4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlFd0pPUXpFTU1Bb0dBMVVFQnhNRFVrUlZNUjR3SEFZRFZRUUtFeFZOYVdkeQpZWFJwYjI0Z1JXNW5hVzVsWlhKcGJtY3hGREFTQmdOVkJBc1RDMFZ1WjJsdVpXVnlhVzVuTVJVd0V3WURWUVFECkV3eHZjR1Z1YzJocFpuUXVhVzh3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRRFAKNG1XeDA2ODdFOGQxYm9qS1QzbEdua0tWWFY1Y2hOOHFiWEdhSzh5L1d2Y2xNUys5M24rUnBrc00vWGVJOC8vMAp6akl0R0g3dEV1a0RPNnFMN3JjNHpNOURnNnJlR2xNdnlyMmNHNTFhZ3JnUnZMUXVHc2U5bm1yeVJTUGJvNXk2CjZLOCswY1U5S3UxaERFay9qcUN3RTlYbDY4dUNKc0gyVUNYWlRLTjlmWmQ0K2N3R3FjRndNSHdlM0dzK0dWSFgKVnBLSTgwVkRuSnZZOTlHR1JHeVYvaEFBQ2JJWXZEUU9nZzBmeVVDSFBkVWhVbklhbll5amNobGVuU2hsbGM0SAo3TWhHOGYyTWZMalh0UGpidXZwTHB4bFVPaXovOE9ZSVdKVFgyMzJpdEpzWklMaVpjendyV0NsR290MU9mQ212CnZIbUFjU3Y4alhpMWdGcDgxSHRBaE4zNGwxZTJvbkZ5aGc5RmxwK2FCVy9DV0JiOVJrb1JXS2N6cHRoQXNISGQKdTRJcUQxY2VDT010dzNaSFB6bHNieURlOUZEQ1d1RTdSQ3RqUlNVMktUN0tRNW9tWFNGVjJQbXFlR0pETVpLKwpiV254cGI5aWtjRFBSREFlWC9KVTR6a1N1WkpOY1ExSXhXQnkwT0dCeHh6a1E5Y3VnUmk1SUJBaDVyeVJ2bmdlCkkxTFVKY0M0NVJwMkY3SmFpM3dkVmRjUXoyU2FIMmZuQ0p1Mm9JV2x5SEtEeDhNN2p1UjRBcUZwMHBRTlcrNGsKVlVVVWI0RVVwUWphd1QycjhHd2MwQVh2a0tHWkMxQ241Y1VuYUtKQnpDV2JadjEzcll2N0dGODA3c3NsSFhCNgpvajRmQ25QK2FzTEM4Slh0QlVsMWJGUmtuWDQzZkN1K29TMG5UVkNSZFFJREFRQUJvMkV3WHpBT0JnTlZIUThCCkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkg1TTBWOTNEc3hoaythQ001YldhUlY1TW1yeU1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUNBUUJMajdnMjlnby96cC84ZzNZeXdCMi90TFdFa2hzRzE0czRxSUtGVW9acXJwbWtKNkhKCk1vTHJmKzVOWlA4V1RpaWxiZWJqMTZnQlk1Mjl5N1FrSXJIV3ByRXFZcFQxblRHNDVVK0plODJXRUhJS0FxUnYKUlA3Qm9QaGllYXJMNUFkZk9KK1ZZOTd0U1ZrUkRPVklsaXlZM1FKOEpoNVlwT3ZHVTZ1V0xBS0hBSjRZanBkNAo1VDdYTDFvQUlhZW5HYUZjTVpOazVUcVBoY0pRWk1tMFZ4OUlzUDloMHg0azJBTEwyQ2oyRHVjbTF6K3UrOGJpClZManM4aUdYd0c0MjN0ejFsM2dEZzRBWVpGWWRCRUtQOEFMSk4vdTM3VDJ6MXRDZ1grQ1h3dVord1dGMWgvY3IKVmlpMEk3bktQV0hqQlVvb0ZhemFObmZrZGVZV0VLZE1rUXFReDhrOHdKM2RCdVA4K21zbXdrT2hrcE5Fa2srdQpVU0V6SWdjYXZFeW9yQkRDKytlMGFnbUM2OXdQd1VYR2wrTjZLWG9zKzRXNzFoN3RzR1J3TTFTdzA0dmxiVEU2CjlKTWgwUk5GaUd2SDZnUWNWenMrMGJHRUZ1L3BUU0xNV1YvVWNSV2JKWFZFQkVDTjN0TUM1cXlmYnE2UHZ4N1oKVWlkc0V2Y2VrNkNjbHFWTzY4TWwrV2NBTWdubGluWUc2R1M2SDNlbmhOWjBGZFRkek8wZWpnUzkzNk1FNjh5KwpUQWI5SndvbG1MSGo3RTFvR095Ny9KSGpSY1FtK2dLSjA0cisvazhqTmlpdE92N2lYL3FRZnNLL1N2eDFQNEdSCm1heEE0TVoxTE15UyszVVpLM0R6ek4yVW1qYVE0OGhtK0tvSERNWkROTUc5WFpOMVdFVVlPWjJOU2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBeitKbHNkT3ZPeFBIZFc2SXlrOTVScDVDbFYxZVhJVGZLbTF4bWl2TXYxcjNKVEV2CnZkNS9rYVpMRFAxM2lQUC85TTR5TFJoKzdSTHBBenVxaSs2M09NelBRNE9xM2hwVEw4cTluQnVkV29LNEVieTAKTGhySHZaNXE4a1VqMjZPY3V1aXZQdEhGUFNydFlReEpQNDZnc0JQVjVldkxnaWJCOWxBbDJVeWpmWDJYZVBuTQpCcW5CY0RCOEh0eHJQaGxSMTFhU2lQTkZRNXliMlBmUmhrUnNsZjRRQUFteUdMdzBEb0lOSDhsQWh6M1ZJVkp5CkdwMk1vM0laWHAwb1paWE9CK3pJUnZIOWpIeTQxN1Q0MjdyNlM2Y1pWRG9zLy9EbUNGaVUxOXQ5b3JTYkdTQzQKbVhNOEsxZ3BScUxkVG53cHI3eDVnSEVyL0kxNHRZQmFmTlI3UUlUZCtKZFh0cUp4Y29ZUFJaYWZtZ1Z2d2xnVwovVVpLRVZpbk02YllRTEJ4M2J1Q0tnOVhIZ2pqTGNOMlJ6ODViRzhnM3ZSUXdscmhPMFFyWTBVbE5payt5a09hCkpsMGhWZGo1cW5oaVF6R1N2bTFwOGFXL1lwSEF6MFF3SGwveVZPTTVFcm1TVFhFTlNNVmdjdERoZ2NjYzVFUFgKTG9FWXVTQVFJZWE4a2I1NEhpTlMxQ1hBdU9VYWRoZXlXb3Q4SFZYWEVNOWttaDluNXdpYnRxQ0ZwY2h5ZzhmRApPNDdrZUFLaGFkS1VEVnZ1SkZWRkZHK0JGS1VJMnNFOXEvQnNITkFGNzVDaG1RdFFwK1hGSjJpaVFjd2xtMmI5CmQ2MkwreGhmTk83TEpSMXdlcUkrSHdwei9tckN3dkNWN1FWSmRXeFVaSjErTjN3cnZxRXRKMDFRa1hVQ0F3RUEKQVFLQ0FnRUF4cUFRZnBvOXdYcWloMGQzbDZYYndHZVNRdGlWUWwwS1JhV1FkN2dGeDRnSXdCYUJBUzlJUUVmZApTYW9jdmxRMGFSbGl3OGUxN3BxMDNJdno1Z1BPT0kwb005L29NSktDalJWdm1XcWhMRXZkeDhTL2U1WEc1eHdvCkh4ZUVyV1ZrYVFuTjkzM0NzVEVFNGtjMDdXOC9oVDFPa0lKOVRmdnVNNFJjeFlUK2FQYkk5YVBuRnk2M1RwUmsKNDYvREgvQmRUQnpCb2V5ZWIzMkJRd3Qxdkk1QUdnaElEV0UyTTRBUFZSVlpxTmRIdW5DUDVXaTY4VWM3aXllSApxZWtMSWhUQ2FMd0ttQTY3TGJJMWdwUzllbVRxcGNJZzUyTTJmODBTWFVNVjVERXBsMzVzK3ROU3pmdFdzQ3RxCk5MMkVLbXRrQVM5YUFDa2gyQXJzSEs5b3hnRFhTUkZuUm95dkpaUUFKKzdlUXRBSzZLMUFIdi9PRmlhRjU0NkEKb1UzQ2RzWXBsTTQwZFZHN2U4SkIydXJpSW5aRE1Ic1E3aUpJanZaSWJlWTluMlFOMC9hNUt2MVpwaFF6cVpobgphaXNOVFRXa2x6MTcrUDE1ai9SbG12TE9OYWxNL0NzbHdtN0gzR2RqL2dWelNIdXZtQzVpQkdlZnJYbDJWRlNLCjUxOG1sYkU1QkJYbXRRckQweUJmRmVmczU3TzFrYkM1d29TZXlJWFROR0w0SnVMa1RkN3pvRDU5c1Q2RmhvMlMKNlJBTVB6aEVvVUtEcEhwRWRCVVkxMVFTN0VZMXIyTmZhQkJlT3hPMm5iUjR4TEhxWncvejZQUzgwbVZzMmg0TApqUS8zMnhMajFnM1VQMWJ2a1JTZUZ2ZFQvMmt4cW1PcG1DS2gxZnhHU2FPYWJPSmh6WUVDZ2dFQkFOSWdMamJwCnRBYW0rTTlMdjIyVHZmV1d0ZWl0MkkyaTdIbFNldmcxK3VvTnR3bWtaUDg1UXR5OWxBc0MvT01ib0F0eldHVlgKeHkyc3Q1YUc2aklFTjdzMDBOSjVWSzQ1N29rbkg0eEpiSExHWTVNQ1N1VWw4NjkyeUMvR0xteUNTQTNreUJCRApJVVdDa0NmNWJsUzVJaDE4UTlLTHE5R3Iza29LZ2wzRU1MU0trS3dmRkNXR0FodXhrckxTbVhDK1ZZNjlBMUFXCkJLV0FGTG5XeDZTWVNoYXJmNkx1TVhFcUVrb2QrK2VVaHVNVUxaelJJVnFYT2hGL0dHN0tSb3NwUkJydjBZaWIKZ1BOSldjbUQ5ckd1aWxPUVprQ0ZaWlFYSEtIRnY3aXBpdExackoxY0laLzNEQThvd096T3lxR0tvTFJLeDg0VApzeU9YTm9oeFRRNS9ka1VDZ2dFQkFQMUU4d1hFN1F6cUxSNnY1TGlXUnhlclorNWxmek5kMVNoTVBqeU9NRkV0CndiY1IwTWQ1QnVLcWFtNnpuai91NXh2ODl0V0dlc3I5b2UzSUNNbU5Hck8vYWRubWFvMkhPMDRtZVFXWC9kTk8KVDBBVFV4VjJMWm81QmVpb0F3bDZwQlUwY2hZbmkwaHRsUkRBaExqa2xSU0c2cGptNHAyL2o4V0ljTHR2cDhJMwpjbkEzVTlYV3FHbGIySE1kUW91TVZMdDRBU2hGTTJFbDVha3hFYlNueDl0b0JqQUNncTI5SDdtU0E0Vkd2d0xLClo5cmRTTDFmRkd0T1A1RWhtc0JNbEFsSkQwSFk1WGIrRFRkN0RSSDZLZnQ2T3J0eWFHc2NXZlZhbDRmTGhoV0MKNUJiSHNIWWs1c05BUjZ4YnVWY29SUGd3NEpHSEhiYWVJN0p4MmtaWU9YRUNnZ0VCQUtGaytscFBVMm13b25lRwp0UGhUZkpyQU1lVVFjcjhIbng3b3pXOE05emNEWmMzUUtZc256a1dDajgyTmMvUjA2WThoLzRtSHpJTTJvS1RMCjUrS1cvcithSjdNaVlucVlJTEhVRFJWUjZDeVlXUzgzbVpNOGZWb09vR0NobGxMZUZyNGxOYzNYNGh4ajFwbjkKcWxNRkNFRWhpMjZTdlZ5RTZHNXllQVBSaDUrRXR1NmR5SG14M3JpcXdnVDhZY01KVHVvZUlBZEpnalFrbHNiUApRL1VXekFGeHBNM2VxcmRERzEwMmZxQTNvd3VVR2h6VFBRMDZEdTRWY3d6VjdTMUNldjg5cVBHR2o1dE9nZHFZCnM4bHlTT2s2aG0rVWhwc2l6V2tzWE1CWDZUdGUyb2pibFRBckwyWU5aWEgrdkFFc1c1ZGZ3T3gya1NnTEkyWFYKc053cjV3a0NnZ0VCQVBlcmJWdSs3M0VwcjJYSzdBZjJMUjlnWndvaUJ2bmNVSTVQd0t6Ry8wampUZ1FRVC9KQQowQkxvUTV4dDJkcjdiTlZaMHFlTUVwaGUzdk1BSWxlMnZOMzUyVEZVdWU0Y3lFbnNKWHpxM1RTOTU1SHBVOTR3CjZ2ZGR2QUdBQ3poQnppTk9YaUo4R1NDQ3lMclJDUGtsendON3kvNHFDb0hveWxlSXpYVCtBemRSc1g4N0c2aUoKZWJkT01hU2dnR3FtbUZXYlRNWnNwWW5pM1d0T3FOblpHUC9lQWU4QkJYbVE4RzB2OUhGb2RYSHRMUkpDUXRldApHdkswV2tVNmIzS05jRmFFTTM5WTgwd2h0QnNGSWdycWNCT1R1OHVDWGNvZ3QzZlBWMDljSDRyNXJNTDZFLzMwCnFCVlh6cjhtRTJDLzZISXNtZTYyQ3NDQ2RMWVQwRGZxSG9FQ2dnRUFSUHc4YXhHYUZPSXpRZHFJeHJTOXg4RkMKMnRvYUM4NHVGY0JBc3RQV0tpbXBYU090NGprR0dwVDJ0QnJ5OUVZdlZ3WU1lSkNyZG5NcW55Lyt4aWlGNDhrTApUQzlJSVpGZmdtR0JSR1VhZzJvWlRYc2c1d1RpSUhyaGIxREVvUStKSjAzd0hqcDhJUVVzSmJDa2F5Rk81VXJkClJ1Rk11VVFiWHJud2NPU2M0eG1SUGEyMXJBamZ4bEY2QmlPL1pFUkNlcEFXMVVUSmJjd3FLRzAxbldJbFQxOHkKTVVaWE5EcUs0OFg3V0RvenJXYjdlTWhEWWxmYnJvQ0E1UkFtc0VBRVJiR1NJMEJJZzk1RDEwaXdMa0F4LzlHNwpIcllBOElVV0IwdkJiYUU0Y0p1Tzc2dHFCSXQyMk5DQXdRdU5mdnB5L0t0aGlMK1k1T1FWK3A2ZXJSbGk2Zz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    kind: Secret
    metadata:
      labels:
        app: directvolumemigration-rsync-transfer-block
        app.kubernetes.io/part-of: openshift-migration
        directvolumemigration: 80228d22-f4c5-48d5-8c71-86253c75e073
        migration.openshift.io/migrated-by-migplan: 1f631527-b935-4aa7-97c2-7bf086528b8e
        owner: directvolumemigration
        purpose: rsync
      name: block-crane2-stunnel-client-secret
      namespace: oraclecpq
    type: Opaque
  - apiVersion: v1
    data:
      .dockercfg: 
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: builder
        openshift.io/token-secret.name: builder-token-hln44
        openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvcmFjbGVjcHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiYnVpbGRlci10b2tlbi1obG40NCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJidWlsZGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMDg5ZGQ4MjUtZjczZi00YWIzLTg1OTItNDhiNDYwNGMyODE1Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om9yYWNsZWNwcTpidWlsZGVyIn0.mZ_sqtiqLX55O_V0ZtaLmaSh3Y5aTbFuUVvEgLYdfn2DLGMKtLiIhSOR1vNjeH3q26EloXXFyzDgIJbJQHZVcN8urZoig_00wYWwaegcIOzvYCZ5DFKGIMH50LtvEb_Gl6HtkCnco9NcVwRCAr1k_x0ekpDAUVC3rg2GUbMKa_GmxlXdp4XvxDZbFzb_95sQt6rBv_HlgpD8ZL7c0KNoFYRGayGvbAy2q66km57nk1bv9VD7s-8l1L0FEIeTF8vG-P7l7H-6Tu_83bhyDcZN-oRDMU4hCdoxx-6pTfQaX7Ltpn4c5pNCXx1B9UV7DV8djUqrn7WnN7qaWEJmPJWmdw
      name: builder-dockercfg-kdn2w
      namespace: oraclecpq
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: false
          controller: true
          kind: Secret
          name: builder-token-hln44
    type: kubernetes.io/dockercfg
  - apiVersion: v1
    data:
      .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5rb2hsZXJjby5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMGIyTndORjl2Y21GamJHVmpjSEVyWW5WcGJHUmxjanBNUlUwek1GWkxRVFJHTjA0elNGTXlWMDVJV1RKS1RqRXdPVmhJTjFRME0xSlFSbEZFTVZOYVRrRldSa0ZRTWpsV1J6RTBVRUk0TWtKSVNWa3pTRVE0In19fQ==
    kind: Secret
    metadata:
      name: builder-quay-ocp-prd
      namespace: oraclecpq
    type: kubernetes.io/dockerconfigjson
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMWlPV3RtY0NJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTURnNVpHUTRNalV0WmpjelppMDBZV0l6TFRnMU9USXRORGhpTkRZd05HTXlPREUxSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tOXlZV05zWldOd2NUcGlkV2xzWkdWeUluMC5PYzVrYnNrdjc2ZU96QTJpTmVKcktVTGkteFIyR3BMYVdYWUhodmhtX2NTSkRKNDBEeGRUQ0NYT09POUNJMi1oLU5aQzRoZkVMQTQ0S25PcmkzWjdLdmpMU3ZGeGQ5UjNaUDZzNlJSX2sxQjQzZGRtY2gxZWlzQ3dYYk5oYUtadlVDem02UEZ0MlFKN2s3ZzQ5Qk1OTWNrSDVwZUhfSWxvM1FfTlhpZlVMNXZqbmVDZmxnUEx2N0cwNFNwQ2VjOTVqNEt0T3MyZnJ4ZGgxWnpkX3FUWmg0OGc3MkhoSm5ycXBrd3B0NFBxN0FCZG9odFJmdnJoZlRNUGljdFlHaFVJbzluZmFpNzluS1R6U2l3cGtUSkFKMWxYVzZsTU5lZlUyZjhKOTdPRm0xMXA3OV9vRk1rdmFvekxuSllKdkoyWDZUZ1dENW9SV3pOYi0tWnY0a2JONnc=
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: builder
      name: builder-token-b9kfp
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMW9iRzQwTkNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTURnNVpHUTRNalV0WmpjelppMDBZV0l6TFRnMU9USXRORGhpTkRZd05HTXlPREUxSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tOXlZV05zWldOd2NUcGlkV2xzWkdWeUluMC5tWl9zcXRpcUxYNTVPX1YwWnRhTG1hU2gzWTVhVGJGdVVWdkVnTFlkZm4yRExHTUt0TGlJaFNPUjF2TmplSDNxMjZFbG9YWEZ5ekRnSUpiSlFIWlZjTjh1clpvaWdfMDB3WVd3YWVnY0lPenZZQ1o1REZLR0lNSDUwTHR2RWJfR2w2SHRrQ25jbzlOY1Z3UkNBcjFrX3gwZWtwREFVVkMzcmcyR1ViTUthX0dteGxYZHA0WHZ4RFpiRnpiXzk1c1F0NnJCdl9IbGdwRDhaTDdjMEtOb0ZZUkdheUd2YkF5MnE2NmttNTduazFidjlWRDdzLThsMUwwRkVJZVRGOHZHLVA3bDdILTZUdV84M2JoeURjWk4tb1JETVU0aENkb3h4LTZwVGZRYVg3THRwbjRjNXBOQ1h4MUI5VVY3RFY4ZGpVcXJuN1duTjdxYVdFSm1QSldtZHc=
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
        kubernetes.io/service-account.name: builder
      name: builder-token-hln44
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      .dockercfg: 
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: default
        openshift.io/token-secret.name: default-token-fglmt
        openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvcmFjbGVjcHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1mZ2xtdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMGFkYWE1ZTAtZmM4ZS00OGJlLTgxNGEtODNmNmYxZGIwYWZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om9yYWNsZWNwcTpkZWZhdWx0In0.x0ERcuUDA5gP07jSTEIfuho4dAisI7iuRC_EQ9o6b8Ih7uTHJyHXgqqsgkIETSN2x6bNB4EWFnkLhF1S-zygRjMLpZY6ceMW8Zy2OUk9ltjuDAYfe0z8gs4Ro1TZM142ECm1fkJk3zW02IerPS5gQ7IIlCvnkE_Ugf-KxoyJoeQXaBc8OU8RiTnyNfFYg0N4zhzIIna-FUBuZRLPVlxo4pSqxcoTddHmjhHqAHZKYtOjfp2eEZ3VJp7F2NOYMC0DV41o3U7r7DEh1UZzGA9U19MPbig94uQ812LkOzVuxZN0Yt2Kvyuz9OiADaTeFTzzH1SLvg5A_oq-AP14reXSIQ
      name: default-dockercfg-8mqpk
      namespace: oraclecpq
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: false
          controller: true
          kind: Secret
          name: default-token-fglmt
    type: kubernetes.io/dockercfg
  - apiVersion: v1
    data:
      .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5rb2hsZXJjby5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMGIyTndORjl2Y21GamJHVmpjSEVyWkdWbVlYVnNkRHBEVFZaTFZUSkhPRmhGVWtSQlR6UkJVelU1UTFwWlJsTTVOVUpVUWpKTVRFZzVNRGhaTVZZeVREVmFWRTVWTVZjelIxWkxSa3hCUjFnM05FWklWVlF3In19fQ==
    kind: Secret
    metadata:
      name: default-quay-ocp-prd
      namespace: oraclecpq
    type: kubernetes.io/dockerconfigjson
  - apiVersion: v1
    data:
      ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVTF4SjY2Y21DUFV3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd09USTVNakV5TURVeldoY05NekF3T1RJM01qRXlNRFV6V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFpuQTIvVFdzRjE2eUlNZDNFMmZkaTM4am9BT0pxQwptamxIRmJnRzZPVnk2aDdXV2RMajhQMDhMUVZhcUNpYjRXUG9KWjZwc3BMRzYwUlZBMWNraDZLZWFXK2pFZkh1Cm9OV1BuaVNCUG5sL3M2bDNWT0ZRcjRkMUEvV293c1ZOeTNGVXNRNU1FQWtSc3dkTjcyUE1ISHpTOUNCRVVXSVgKNFZuRnpuTmk0Wm02ajU0dE9zUHNKcDhwWTRVMjg3em02QjltMDRkRUZpZlFRUkpuWDd1aHFEWFlraFNYVGVlWAo2bE1IY1NmcHUwbVY0NXdRN253WFMvcHZiNEl5c0VncUNDSFJYL0hCMkdaYit4aWd5bEF1VjdDcjM4aVJINHIxClVpc3BNOVVRV1lqMkhTZ1EvMEVFZWZGeVhoZjRISU5nSSswWEQrR3ZBYU5Rb0xZM2lqbXJFQTBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJxSwpCdXVWcUxOZFQ1K2ZuTnJXSnNmU0doVnRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUMxTXpSUThrb29BSjAzCjg0UnBmNFRQZk0zVWl3QzdHam54RGhkUE9ORzdmcm82dWw5VG9qL1d5aXB5TVFFSzZjRHNUSktJWWE1cFVTRFAKNDlZd3pLeDFvL0RQMWNsMXFIUlZQSE9HR3JOVE9pSTdqeVIyZDBxQjVRZ1kzKzV5VGVJTjZtTTd1TWliSmpjSgpZbVZDOWtwWVZ0Umk2MURIaEI0VVlyZ2tOaDdwVTJLQS9tVDQvclJvTXE1cDVoQ3c4eDV1L1NodXZRdk0xdENNCmc5aE5BSDVFNzJObUl0QitjTXMxRTY1WG9yM2JzUFFpMWRZMVVHK09UcnA3RkpnbUtFZVhGL2JEbXpSVlMveHMKblQzVFJQQTVDeGhBb3gzVGlsMGx5aFNGVFdkYytVSmNvaEtMY3NUZS9RdXh1b2ZRcWxlNi9rM3JOQTNNSjVvMgpNcW5RaWN0bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSVhqRkhsT1JrMEYwd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01Ea3lPVEl4TWpBMU1sb1hEVE13TURreU56SXhNakExTWxvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6OTFvT0phQ3V3RkIKdElkQ1FKM3VjV05FaFdOUHN4N2dTZ3czY2Zac2p4K09zdTlIWHp2eXpMenpIUWl5T0FOTlFFM1BiVmtaVHZrVwpCQTdSbGt5djNEcDc3OWJjakpEaFFINnJmUEdaMnkzQ2RnVDlubURRakxITnozbGxvYWxiOFpUVnFtK0xKV05sCmIyMWVuakYrTnc4YmVwRXBVMXorSGxVL3djQzZTWWpCSEQ5aUJkbE1MQWI0NStza1dpdjNBWlZYZVM1MGlOVGwKbHFxSHY1RFBqNW5xRXJoYmdVTTZsRlQvZ2lpbEV4WnVPRldWaVRBK3N3S1VPUnpDTXpxV0gwVkRLeTFHTkd5dQpvMHo4eUNrdUpIdjFTUnlyOWQwNXlkazVuL3d6V2RlSVNkZGJsU1JYaTkwNEhTL054aHFyRFhrMHRVRE05YUM5Ck0vMzZwMnVMVndJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWNWYXZXeG5zZW9tTDhvbldWVHZTcjRDTlBhNHdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUE5R0lUUTFGYmVuZFplYytheTBmMmZPRjgvTi80MVN5NVg0MFlEKzhXWHJkdllhUjYyNUlxTml4WllECklFZHF5dTN0MnlDNnBZMFBqUk1wMzNaOFVVZFhFY1Y5RnRkYWRDVG5OeGJwYWpGcVNnNytzMDZ6K3g1YWtNNXQKaXNuclZCZ1RuZUExcTdnTWRuaC90cEN1OFRJMUxLNGg4SkJFd1R2bDBpSFNpUjNYT0g0eXZiWHYrTVB5UmhhTgp5emNZTHN3ZFRUbTNWMVNLY2hpL3JLWXh2YkI2OWcrNUZnTHFNTjFjL3NFelJObFFmQm0valowQkVyVkREeU16CkdNQStsVkV1Y3ZOMmV5R2dXcjdhQ1pzVTR3UERTcFFVUlhPRkcxTmhIS2s4R0lEUWp6TEJnVXJ4dVdrOEx3czIKVk56ZTNRVEZFOUVsOU1SWFR0eVdLR1JHZDF3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVlReGNmQng0Qzlrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURreU9USXhNakExTTFvWERUTXdNRGt5TnpJeE1qQTFNMW93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXhBS04xSC9yOGRiQ3BjMFdkVytnTjhlN1R1QmtaRGJGYjBBYklTMnliNktDNC9xeVpwVzgyQ3JHYzZEawo5UHFBUGorZGwzNy9ycG1UYmsxcEJjakhsOW9vek9kdU5DeFd6SU5SRG5wL2ZjY1R3b2k2bkxsaGpUcW9LRlNqCmxJeUlHRVVPaUV4T1BNaVFXQUF5TVdPdHJYTVlUaUJXQ0gxNjR2UmVPK2VaUnlua3BLdUZtK3VYR1Y3TWZLOGsKOXFyUU5telpqTzRrcUxaOGlwRmxDTTdHaWpkZk9lWFJpamJYc3pRWUpBdUtrTjdnWUwzNGRzbEVFSjJacUtsdwpLL2Nzd1Q5dmh3RlkyZDBEVnNYMW9peVVDeXFQVjZBUFVFM2wwR0pISU5xdERDek5lMXl1bkFuNStGWU1zQ25GCnRZY1N3WU14Y3JuYWRRbUV1RnR4VWx2Zzd3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVOOE1PVTQxTzJVRWFENWp6SkdCc2Zaa2tqZDB3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJalFrZC95a1dUYWhaaXhxS254c0hmQjJIR3BWVVV1QldxRjllVU96Zzc5CnFHcWNJOEZqOVlvLzUwcDd4TUZQc1J6K3YxbWxhTHlEYWFrTjNlL2t2TGlydlVxb1NIMmJHdEZzcnh6MlBXVEoKYXY0Tkg1dTd1YkhhZEtEMmo1MmNpeld6V29XTzF0Z1pEUmdZelZ2anVrek9WOUw5Vm5CS2ZOWFN5akFScFd0MQpFcTVTMHZZR0xvTndhQXlMTUNxU3pPS1YrUFdqcHV4R0t2YnEreFR1Rms0T2tTU0NKYmJxZ05CeEhMS0E0clZRCjFjVzRFRFNhKzZCeHpGK0Rsa1A3YjBKZHR5bzhURzJ2a2tqK0JrVVFPbU1LODZhZ25OUjFzNW41OURkbGYzazIKNUNZQ3U0cTNtN21oNWY2aDB6bnZxeUN5d2xlMWNOdG5wRVdoVlY3ZlE4cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUladzdpWWRYRU5Ka3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TmpBeE5ERTJNalU1TUI0WERUSXdNRGt5T1RJeE5UQTEKT0ZvWERUTXdNRGt5TnpJeE5UQTFPVm93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOakF4TkRFMk1qVTVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQThaMkUKaSs5cXJzdmUvMXdYU2k3NXRpL0pyRlJYbmRUQzliWVEvM1kwSVJBMXdDRVNlczBOQW5RM1dJYkRUbFpqRGxpZQp2aWJ1bzhoZlVJL2JKRHhWVnBjaWd1T2VmczBsTFRDWFp0Smk4VW5RWVIxWTZLWHBVUUY0TDZJUE5uMG5zOVhTCnAwamw0OFo2eXR4UXZqdEc1OFpPZkR2MG5FenlDREt4RTRPRjlmV2l3OUJ5Wjhvb0hoOHh4ejF0Z1FXUmxlT2EKVDlpMXU0ekxTalY1Y3IwMWxyTC9CeTRRdUpxZ0tJQkdMMFRzVFROQ1JRRG1iWXFLemZpdGMyTHFYUG1TWmppRAp2Q1FhWmZaRGdBYmV2cUtUOFl3VGxPSVFXcm5tMFA5SWMvSUFHTXU4N2ZOdS9yZEVlRWluTmF1dUxGM01qcXhpClBIWUJhd0NkKzZiUFFZOGhxd0lEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVTEgyYVNrMFlUN3VpZnFrMC9DcWFvY1UxSndZd0h3WURWUjBqQkJndwpGb0FVTEgyYVNrMFlUN3VpZnFrMC9DcWFvY1UxSndZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJb3l6Z1lrCm9wL05pUzl5V2YzZlhHQmlvbnF5cEt6UEd1a0RpdVVNTk5jYWo1eGRWLzRXUWhCY3BlamxDVmZTSmtGT09NdzUKbHp6cHAxRjZ4L2FSUkVyeE9NQ2dJbSt5bmdvekFxVk04bDhuYWJ2VkFUVHBodDNxQ3licFNUNVNMWTRKbHltRQppb1lueXlabFVVcmxtMDcwVmE1SW9peDlrVEtpYklFWW95eWU0M0FhcjYyelJWNmdhUmovcU9RK1NzNmo3eFJHCmI5WkhEcXdCRHdwWm5lOS9QWDU4L1Uwc1ZkNC8vd2hjM0lhQ1NWdWpSNXQ2RHlGdFpraHhqc1NRcUhKdG04d1gKdlpDRTBUeVdURkFYNGZVYk5DVzF2cnNUczc4Sm8xaVNVWGFuc3BkZ29vcTVBNzgwYmdSU00wejJORHFvTGd1YwpndUpna3h2WXpNWUhOaFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdwRENDQll5Z0F3SUJBZ0lRWVR2dVZNMzVOSEVTMStSbmdSOXhiekFOQmdrcWhraUc5dzBCQVFzRkFEQ0IKdWpFTE1Ba0dBMVVFQmhNQ1ZWTXhGakFVQmdOVkJBb1REVVZ1ZEhKMWMzUXNJRWx1WXk0eEtEQW1CZ05WQkFzVApIMU5sWlNCM2QzY3VaVzUwY25WemRDNXVaWFF2YkdWbllXd3RkR1Z5YlhNeE9UQTNCZ05WQkFzVE1DaGpLU0F5Ck1ERXlJRVZ1ZEhKMWMzUXNJRWx1WXk0Z0xTQm1iM0lnWVhWMGFHOXlhWHBsWkNCMWMyVWdiMjVzZVRFdU1Dd0cKQTFVRUF4TWxSVzUwY25WemRDQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVNBdElFd3hTekFlRncweQpOREE0TWpZeE9ESXlOVFJhRncweU5UQTVNVFF4T0RJeU5UTmFNR294Q3pBSkJnTlZCQVlUQWxWVE1SSXdFQVlEClZRUUlFd2xYYVhOamIyNXphVzR4RHpBTkJnTlZCQWNUQmt0dmFHeGxjakVUTUJFR0ExVUVDaE1LUzI5b2JHVnkKSUVOdkxqRWhNQjhHQTFVRUF3d1lLaTVoY0hCekxtOWpjRFF1YTI5b2JHVnlZMjh1WTI5dE1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJKMThxTnA5WWFNaEFRWnFERGZ3enNQVUpkT0VYcXQrCi9sdW1xMnFGTGZBcGhDNFBJbkNqYmhacVlMT0RxSVNJeUs3ZjhNbjhOMlR1OUY4WnIzY1dIWjN3a1E2REJ2VSsKS1RmeVY2cWVFSWJxcFlsd05FV1c0N1VBaWdwTHJpRVViVnc4YTZRd3p6a3duTjEyb1ZRY2ZyNlFMeUFQVDhoVgpXcXQ2bmdqZWVVUkI3OGxBWUpDcTFIaHMvK3BLc3l0YitIdEJSTE8vWkEwVHBFZi9FdlhrSTZRdFlldjBPUThiCmpERmUzaXY4d1B1UUhSOUZyT29meFJLVlpTcWUrcUpaN0RwSWJiUklQQjk5MzR5U2VIcWEyYmtacFUvMERaaSsKaUx0VHZxZjFTbm5rVmh0OEtDbEFvL2FHVVUzd3hiakVFSmsrWEs4TFFqZmRVN1ZvT2FicjR3SURBUUFCbzRJQwo4ekNDQXU4d0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVVFhnT0FudW1XckQ2TWhkMnJlMUdiM3QrCjhGQXdId1lEVlIwakJCZ3dGb0FVZ3FKd2ROMjhVei9QZTlUM3pYK25ZTVlLVEw4d2FBWUlLd1lCQlFVSEFRRUUKWERCYU1DTUdDQ3NHQVFVRkJ6QUJoaGRvZEhSd09pOHZiMk56Y0M1bGJuUnlkWE4wTG01bGREQXpCZ2dyQmdFRgpCUWN3QW9ZbmFIUjBjRG92TDJGcFlTNWxiblJ5ZFhOMExtNWxkQzlzTVdzdFkyaGhhVzR5TlRZdVkyVnlNRE1HCkExVWRId1FzTUNvd0tLQW1vQ1NHSW1oMGRIQTZMeTlqY213dVpXNTBjblZ6ZEM1dVpYUXZiR1YyWld3eGF5NWoKY213d093WURWUjBSQkRRd01vSVlLaTVoY0hCekxtOWpjRFF1YTI5b2JHVnlZMjh1WTI5dGdoWmhjSEJ6TG05agpjRFF1YTI5b2JHVnlZMjh1WTI5dE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGCkJRY0RBUVlJS3dZQkJRVUhBd0l3RXdZRFZSMGdCQXd3Q2pBSUJnWm5nUXdCQWdJd2dnRjlCZ29yQmdFRUFkWjUKQWdRQ0JJSUJiUVNDQVdrQlp3QjFBQm9FLzBuUVZCMUFyL2FndzcveDJNUm5MMDdzN2lOQWFKaHJGMEF1M0lsOQpBQUFCa1kvdFBOVUFBQVFEQUVZd1JBSWdhSmFieXZUazl4Y2gyaFdPWmlYQTlXWTBmR1ZjV0Q0TzV1R0NvWGpxCm9vc0NJSHlQbkxkMnl1ZElNMDNMTXVyc2ZQMkJCYytIUUlrZ1NTeTgwQnZ6emhoeUFIVUFEZUh5TUN2VERjRkEKWWhJSjZsVXUvRWQwZkxIWDZURHZEa0lldEg1T3FqUUFBQUdSaiswOUJBQUFCQU1BUmpCRUFpQlZLZDk1dmx2VApqUlBSd3A4OEFLdEk3ZFowUkZicEp0NHhZUlVGTmMxd25RSWdmMXVSdC9GeW4wbWdpbkdZYlI0ZXpHR2x5OUlnCnZsTzhVUjc1R2tJVk1KNEFkd0FTOFU0MHZWTnlUSVFHR2NPUFAzb1QrT2UxWW9lSW5HMHdCWVRyNVlZbU9nQUEKQVpHUDdUejJBQUFFQXdCSU1FWUNJUUM5VnpZWWR0dGpMdUZDZHQvbDBOekNjdURFSXNYN2FicGJlSjBaTEZyYgpyd0loQUpGQWlleDBUM08wYkFQM2NtbUQyMWNEbDVVNDNUVnlGS042c2dLWjZRUWhNQTBHQ1NxR1NJYjNEUUVCCkN3VUFBNElCQVFBQ3FjRnhZdjdrWldhQy95UEx0UFI2T0x6NWM3NGJnbVFsVG1xQnlZQU11cmNYUVZFMmExWmYKYy9jTUhsYW1rbGhQNEw0V2psWEt3NEtLRVZ0MG1jM2hzcmgrYXZtWGliKzZvaVlPQ3lOOEdMWkxBVEhubVdQZQprL25SU1RTdk1BNmpydHZZRlUxb245MTRBdC9BV2tvT3RHQ0JNOFpFLzJSTDBJZTQ2NlZVVEVOZmtXYkRtcHRFCkh6K0FVRHBaRCtreHJXU0czRDFhL0NKRGhKK2drbTdhcUVPTFMvTzdlc1VyTE1QNnA2TFg5TytTeVFDeTNDUXgKb3M5Vy9ydEQ2a0NYZlNlSEJJZTM2QU5sTm1jT3lRYTlvWjI0ZkdmeDhtdXFxSEZLWWNMdUVyWEJjS3BzZnRkcwptK0lFK2tnVFNNSWxtMllLdzBPU1lwaktKWjNOT0FiTwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMW1aMnh0ZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTUdGa1lXRTFaVEF0Wm1NNFpTMDBPR0psTFRneE5HRXRPRE5tTm1ZeFpHSXdZV1ptSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tOXlZV05zWldOd2NUcGtaV1poZFd4MEluMC54MEVSY3VVREE1Z1AwN2pTVEVJZnVobzRkQWlzSTdpdVJDX0VROW82YjhJaDd1VEhKeUhYZ3Fxc2drSUVUU04yeDZiTkI0RVdGbmtMaEYxUy16eWdSak1McFpZNmNlTVc4WnkyT1VrOWx0anVEQVlmZTB6OGdzNFJvMVRaTTE0MkVDbTFma0prM3pXMDJJZXJQUzVnUTdJSWxDdm5rRV9VZ2YtS3hveUpvZVFYYUJjOE9VOFJpVG55TmZGWWcwTjR6aHpJSW5hLUZVQnVaUkxQVmx4bzRwU3F4Y29UZGRIbWpoSHFBSFpLWXRPamZwMmVFWjNWSnA3RjJOT1lNQzBEVjQxbzNVN3I3REVoMVVaekdBOVUxOU1QYmlnOTR1UTgxMkxrT3pWdXhaTjBZdDJLdnl1ejlPaUFEYVRlRlR6ekgxU0x2ZzVBX29xLUFQMTRyZVhTSVE=
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
        kubernetes.io/service-account.name: default
      name: default-token-fglmt
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMXRZalJzYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTUdGa1lXRTFaVEF0Wm1NNFpTMDBPR0psTFRneE5HRXRPRE5tTm1ZeFpHSXdZV1ptSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tOXlZV05zWldOd2NUcGtaV1poZFd4MEluMC5zLUNpUTZLOUpQUW91N191MEotRlFaanVCVnBRWlJIT3cxT1BtR2tDUDBLbndCVmdicHVZQW55bUhlT2lOeG4yNGJ3ZzNxVi1uR0M0eGJOX2J1NlBZUXVzMUdabnc0SmtvVmpSdW5GZnF4R0swMDlPZU9ERmRUalZQRVZZaWRVZkVPSDhyUDNBd3V1QjduZm4xZVpSeTVwTTNFSzlNUXA1R3pQcXpLU3FTSzBuZ0RLY3UwR3d1M0RUWmZNNlhjRG5jUURXMEV5MDRpZ2RCQWhYUUJ5V2h1TW02NGJ0OHJDOFU5OFJ2bWtnMkZRT3ltVjhQelo5eVZvcm9FZUR3cFV6SjJORnZyeWZpMHlzRDZxako5RngtS3pvVkxNMHkwN19tSUdRSkNDeE5DV2RWZUdNaUFETGM4dkZwRWNnbV91NXRCbU9RU1E2TWpyaklZanFYTWdqUGc=
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: default
      name: default-token-mb4ln
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      .dockercfg: 
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: deployer
        openshift.io/token-secret.name: deployer-token-pnmxc
        openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvcmFjbGVjcHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVwbG95ZXItdG9rZW4tcG5teGMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI1ZThjYTk5NS1jOWE2LTRlZjAtYTFiNC1kYTgxNGM1ZTNlMzMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6b3JhY2xlY3BxOmRlcGxveWVyIn0.j25dC9I8jv3qQmKoUqxPWY22SGLaBIsWU_aehsX_6euwz50MrFvsPPJBBqf_Cw04DRxBGQijQK7CxVh-BHj3kShpK5zzmH6t57VhXD4DB-vxKx3Q5eu6E7CoLiX1uasudmmSL_j3NsE_lZeIidZL2LZb9pmDZeXkP8hmraCIOK_1HMZ8BxlqNoMVasf2Cyedi-vG4ukpP0-DFXUdek69rxQ2yuqJNNtSMpr-FBHA0vokFE29IIEBuUuJWzjQbwzO9kTgbKdGLmcvwIaPgMbARYA2LwnPgxmihfN1D3TXKenmJgvjCPI8n84KJ6avl8XeOP_Y2IoiTshgIPNrsKi-cg
      name: deployer-dockercfg-qrg4j
      namespace: oraclecpq
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: false
          controller: true
          kind: Secret
          name: deployer-token-pnmxc
    type: kubernetes.io/dockercfg
  - apiVersion: v1
    data:
      .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5rb2hsZXJjby5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMGIyTndORjl2Y21GamJHVmpjSEVyWkdWd2JHOTVaWEk2VkV0U1NqTkNXamRIV2xoSlRFaFdVVFJWVlZGVFdVc3dTRm8wVlRjMVZrZERUVVJSUWpJd1dWcEdVVTgzTWtoR1RVMDJNVU5XVVV0RE56SXpPRFJWVWc9PSJ9fX0=
    kind: Secret
    metadata:
      name: deployer-quay-ocp-prd
      namespace: oraclecpq
    type: kubernetes.io/dockerconfigjson
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHROWEZ4YlhBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJMVpUaGpZVGs1TlMxak9XRTJMVFJsWmpBdFlURmlOQzFrWVRneE5HTTFaVE5sTXpNaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZiM0poWTJ4bFkzQnhPbVJsY0d4dmVXVnlJbjAueEFsMkVuSnp4YjIxZDVvS24xaGpEZldSd1BCN0t5TEdFQWdxd3B1VG1OUGRsdERWaGhhQ3VDdzgzQUtSUUxtUjJOVFpDd2JFcFZVNWdUc29RM1dxWTBNU0kxWFgxOThGU3o3c0lIVE8wMEhXTzdMY0ZqOVh2ZGphdDI4eFJRdnJLUDE2TzJrcFV3TVdHNXR3dTA1eVZWdS1rS05UMVlMWGN1QjkwZEJWQWZFUFVTUk9UTHB4cGt4cVhlT1h6LW1wa01JS0dSUVZqMENXdzN6ZzJSckZvbGhQdWRBLUhSN3YwcnkzeG81QVFtakEzeXE3eGxfUTFUdzd1UGpjd0pCY3huenJraXR4UDFGaTdKbHNuaFJRWkdERXRxOTJ5cm5kZTIxS2pZeXFpa056Wm5ZWnBaR3c4UG5nb3lOdmhxeTBCQUd6eHBOTmFxZlRtUzM2dkhDbHpB
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: deployer
      name: deployer-token-5qqmp
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRjRzV0ZUdNaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJMVpUaGpZVGs1TlMxak9XRTJMVFJsWmpBdFlURmlOQzFrWVRneE5HTTFaVE5sTXpNaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZiM0poWTJ4bFkzQnhPbVJsY0d4dmVXVnlJbjAuajI1ZEM5SThqdjNxUW1Lb1VxeFBXWTIyU0dMYUJJc1dVX2FlaHNYXzZldXd6NTBNckZ2c1BQSkJCcWZfQ3cwNERSeEJHUWlqUUs3Q3hWaC1CSGoza1NocEs1enptSDZ0NTdWaFhENERCLXZ4S3gzUTVldTZFN0NvTGlYMXVhc3VkbW1TTF9qM05zRV9sWmVJaWRaTDJMWmI5cG1EWmVYa1A4aG1yYUNJT0tfMUhNWjhCeGxxTm9NVmFzZjJDeWVkaS12RzR1a3BQMC1ERlhVZGVrNjlyeFEyeXVxSk5OdFNNcHItRkJIQTB2b2tGRTI5SUlFQnVVdUpXempRYnd6TzlrVGdiS2RHTG1jdndJYVBnTWJBUllBMkx3blBneG1paGZOMUQzVFhLZW5tSmd2akNQSThuODRLSjZhdmw4WGVPUF9ZMklvaVRzaGdJUE5yc0tpLWNn
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
        kubernetes.io/service-account.name: deployer
      name: deployer-token-pnmxc
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ4ekNDQTYrZ0F3SUJBZ0lDQitRd0RRWUpLb1pJaHZjTkFRRUxCUUF3ZFRFTE1Ba0dBMVVFQmhNQ1ZWTXgKQ3pBSkJnTlZCQWdUQWs1RE1Rd3dDZ1lEVlFRSEV3TlNSRlV4SGpBY0JnTlZCQW9URlUxcFozSmhkR2x2YmlCRgpibWRwYm1WbGNtbHVaekVVTUJJR0ExVUVDeE1MUlc1bmFXNWxaWEpwYm1jeEZUQVRCZ05WQkFNVERHOXdaVzV6CmFHbG1kQzVwYnpBZUZ3MHlOVEEzTWpJeU1qTXdORFJhRncwek5UQTNNakl5TWpNd05EUmFNSFV4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlFd0pPUXpFTU1Bb0dBMVVFQnhNRFVrUlZNUjR3SEFZRFZRUUtFeFZOYVdkeQpZWFJwYjI0Z1JXNW5hVzVsWlhKcGJtY3hGREFTQmdOVkJBc1RDMFZ1WjJsdVpXVnlhVzVuTVJVd0V3WURWUVFECkV3eHZjR1Z1YzJocFpuUXVhVzh3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQzUKOTZlSEtwWVhNbnBqVEtuOHpxM0NXUDJvTlJ0WVRwVGNwazBucG9vS3pHT2ovOHpBSjJjQlJZa2ZMbFFxU3VqMwozSHRhNnRweS9KdjNHUVh4MjM4Z0FMSmJUUVdhM2E1SjhUL0VINnkvemRQeVlEaHA5a1ZpOFV0MzdNNlVtRVJLCnZaejZCaWlGajZobHJRRlhwRTZXdEUwSUFtVWxnVUx6RVVka2tESjVKbHIzdHJVVEF3ODV0SitobS9iMForaEsKNkRJT2lFK2hwbG1tcDdWZUtLZGdwdTB3UkFvSXl4amYrNEJiN0lpOTI5SEJrZWxOT3I2RzZuYVE0aHQ4ZDJIZgpwcXpmMm9yQ0g5K1lsRTNUV0FuQkVNVE5jUWlRL1pndG15M3FxUE45ejE1aDN6NW9taDFvS3ZjaWlxbjBuc3JvClVpTVRQbWdqejBUZ2lKcFdHWllWQm9PT2xZSjZvUWJhZzdSQXU1b2ROdVVtMVlGYllycVlqWGlMaFNQTzZLTGUKMWd2bzhHb2RHSXdtWnhMTDV6dS9sb3J1UzVMcEEvMzA5L2dFbGNsbUZZaGRpQWdnbUdITURwUEQxVEZtYmQyawpMKzVvdG1ZRllYTFFLdHBpUEdJQ3lnZnh6TVZLdUtLTzNLMFJKclpKRzRMSjB3NGVWK1d5aFhrNDJNZVJYRHY4CmwwNGpmVnFJOW84cHorcG5GeDYyTHBYVlcva21DNnE4OXJmc1BxQVlhUVA5eWdZWVVrOVBPYk1YWlUzWktlaXgKM3h2SG83emZPS0lDazB3YXR4SmVHS3dtUG5qcjN3aEc5eTRSaHQzZWxqRlF6eFIwbFQxTzJ3RzJoWHVLN1JmWQpNam0wTUpxSytpaWRRaWJEVG0vOTBtY0c5V0NHeEVWNzBWcGtVWVkzS1FJREFRQUJvMkV3WHpBT0JnTlZIUThCCkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5jTVpkTUpmclVuNHVnSENyNXJZb2s5Y2hYY01BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUNBUUNUNHI1YlJsRVg5c1ZkbzZPZUJ6QktMOVIvc3J1d3VSd2VUOTRoU0JlOHlWQ0Z5YUVXCkNOTUYxcHBYaU1aenVUVUJQYjgwREpMUkpYd0xLWWNsYVYzMWNuLzNTVVdHcGFuL2IyZW84TW5tcGxyQncvazAKS0pMZW5rQVpLRDhHeENPdVFOdktrNjF6Qm5sOVBEczFacm5tSG9CME1MRXJidDl1SVB0NDNIaVU4YXBHVE1XVQo0Mkt2KzdWdUk1aXVIdmZCTDhGditpRDVUK0I3OHZobVpPdE1lLzcwZnV0QlNIMnV2ajR4ZzB1Z0dxVU5YcHJ5CnZrQTN3eHJyWnUwM0tDeEZ3UFJIYmVQd1lEejdzZUFwTlI3MTU1eWIxQklSNGNyeHdFc0VUTWxDVmFzRlBxOCsKTEMzb0ROVW5MeVFvZFVPbk8ySW5obEhWTy93Z2dGQTI5R3ZJN1REcUppdkticmllc3JCbnZJMXEycWtxdGpPdQpFQlhCZDhQaW5VTXEvcHhhYnVqWFZUalgvdTc5b24wUmdQaTJ4dWRieXBCSkg5SDU2eWVmQnAxb2NCQUc5QlVLCk1BbzZDQ3pTZjEyQWoxSGh1S1JYM092RzkwY0k4QWswalJ6ZnpNUXlZYVNYRXRYU3d0MjFlVldaaWN0Nk9NaWwKd2tWOXo0aVFuT2lxMWV0Q1E5TWVhNHpFR2NvTUZjVnlSWkdjNHZCWnBoaHRTdm5GM0lzNS9CT1NDMEtVWkxoVgpwekt1OWMzWUxMRWNSWXFQOXFWS0pONzl2bWtVN3FrS2IzQVg4SU1laHpOSkNNRzA3R3lSc052RTVTSEE5NXJNCkFmL2hsMzk4VURLSXlmUVU1dS9mbDMybHF1d2VsTWJkeWRpdU85NjJPaUpiQ01hdlo3dkZtVTJWQnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBdWZlbmh5cVdGeko2WTB5cC9NNnR3bGo5cURVYldFNlUzS1pOSjZhS0NzeGpvLy9NCndDZG5BVVdKSHk1VUtrcm85OXg3V3VyYWN2eWI5eGtGOGR0L0lBQ3lXMDBGbXQydVNmRS94QitzdjgzVDhtQTQKYWZaRll2RkxkK3pPbEpoRVNyMmMrZ1lvaFkrb1phMEJWNlJPbHJSTkNBSmxKWUZDOHhGSFpKQXllU1phOTdhMQpFd01QT2JTZm9adjI5R2ZvU3VneURvaFBvYVpacHFlMVhpaW5ZS2J0TUVRS0NNc1kzL3VBVyt5SXZkdlJ3WkhwClRUcStodXAya09JYmZIZGgzNmFzMzlxS3doL2ZtSlJOMDFnSndSREV6WEVJa1AyWUxac3Q2cWp6ZmM5ZVlkOCsKYUpvZGFDcjNJb3FwOUo3SzZGSWpFejVvSTg5RTRJaWFWaG1XRlFhRGpwV0NlcUVHMm9PMFFMdWFIVGJsSnRXQgpXMks2bUkxNGk0VWp6dWlpM3RZTDZQQnFIUmlNSm1jU3krYzd2NWFLN2t1UzZRUDk5UGY0QkpYSlpoV0lYWWdJCklKaGh6QTZUdzlVeFptM2RwQy91YUxabUJXRnkwQ3JhWWp4aUFzb0g4Y3pGU3JpaWp0eXRFU2EyU1J1Q3lkTU8KSGxmbHNvVjVPTmpIa1Z3Ny9KZE9JMzFhaVBhUEtjL3FaeGNldGk2VjFWdjVKZ3VxdlBhMzdENmdHR2tEL2NvRwpHRkpQVHptekYyVk4yU25vc2Q4Yng2TzgzemlpQXBOTUdyY1NYaGlzSmo1NDY5OElSdmN1RVliZDNwWXhVTThVCmRKVTlUdHNCdG9WN2l1MFgyREk1dERDYWl2b29uVUltdzA1di9kSm5CdlZnaHNSRmU5RmFaRkdHTnlrQ0F3RUEKQVFLQ0FnQStUS1AzMlNGczVnRXdNT2VsaEl1YlZ2cXJGaGR5RHVrNXZoQ00zdkxSeVVUOEZONi81TE5TTHJ4UQpFTklyVk9zVTFlMFJPU296YVVMS2xieHpHS2hPelV6eTN5dW9oT2sxWmplSmVWOEM1bTVCZlZDSTF2TEp3YklaCm0rQmMwV0hYZEF3WmltU2EwZFNGTTE4R3dFbC9uU2xOTEpnNzUwREpjeGxxckEvc25CZlBjb3JZc3Fhd0d6MTcKQTJmSTJ1SnI3YnVQT01VTWoxRHJUcldvdEkvV0JqWGhmSG1zRm5YZjJ6NVdEVGlGK2hVYjlzaWtrYkJ3UEMyNgpQYlVkamxUZ2V0TGhMekphOUJpUTRlWHNqa3ErUGVMZ1BDUzFoZThzSUJkU3pJUzl1ZkdSY2h0VEtZWCtkcDVTCkdRZjBwaG10bUk2ZGpNT1FjNGhNZkJiUUQwUkNkWXI4OHBOa3p4K3liUzc5Um5QMVdJbWxuYUlHOStIcmpsKzUKMlpzN2R0NFBwRnhMUU10WmNiVGtBdlRqcnl4UVhtMHJMcjhXNEtkWVFnUUZ3amF3MXZWUFV0VkhPeGRIS2Q5dwpseUpoQzZRL1FSMGhMOGtjN2RRRlpDZlh6YmtFN0RCZ0JVdzVjbUh4c2Z3WnpjSVN1WUVJM1llYmM3LzRaU1UwCkxCdk5jMUEwQW5mZnllK2tnNkRiMFN4UXBlVlV4K2xYMStmNUJ0amt4UDc4MEluOWhJNXFQZ0xob1lRUEJXeE4KNzNkMnBVbGtrQU5sakg4U00zYzBjM3FncWhQVVdUSStEV080bGRMdHBpenY1anB6dURxMGVpQWd3MEtrQVdqTQpCMks4N0hNL2NCZ3krb3VzN2x4VFpJNmdvaGxkeFZXUnpIdHYzeW84dE9JZ2lMOWxmUUtDQVFFQXdDRTJRRDV3CmxiZlB0aUtOTzUzRXc4MmVqam13elNzYk4yNys5TldJNVc2RnFaZ1BWblNKZjZLSTlkLzJRdmIwT1NaU3l5aGwKcndxSG1Xc09qOXdJT283NlRHQytyb0VrTVd2WkJ3SkF1RmloYnFveTVoMWJ0Mk8yYU1BMEMvRmZWY2hwSTdVYgpUOE1qRG16eVNEcTRHTWNMRWl1alN1WGZkdDVNK1BMdmZ6dVdnTlFIanNyd0Q4TWFuaHdLTHlJRVVER3lybWpkCjFVM3dXNjdZTi81Tk4waEdOZ1RNM3dvWGlSc2tFSk5vMTNtS0FuOXBpd0tuUVl1M0NzLzRXMXJMeDNaNnVRS0EKcExwUUVGb1k0U01TNXhyeWpKUTZSZG8wZVhyVm9RbVFLK3A3NTlHK3RiZG0wYXk1QmFJQ0ZHbGhic0NiRXcvRQpuTzRjL3JIWXc0Nlpid0tDQVFFQTk4b0NvclY5RnVlZkVHT1VaYUdEeU9sRFNCeXJDajdkb21XUm9jdU16TzZGCllsNi80TURKdVM4aThSYkZ5SFpKSW9taUZ6UHBvVUN6VTVBOWZHREtXNVduajJudXNkZ2tDeDBMWTVZN3NEWDAKcWtxVnVFaWJsMUpVc3RNY3BVb0FMSGJrNG9XYlJXN0xVTGdQWE5XTjZmdEcveGtiNWpabmVvTnlGMmRKdGZHaQpHRmdPNjluSk5PZVBnOHlYdDhXNGZTZTZERWdiSzhtZzVJdFdNUVRucG9YVGNPc0VKN1JEWGlQd1dUOXZFTXhrCmZYbkE1Uk84MDdxRXV1MFN5SjRpdW9xSHQ1U3dac1ZISldQUGtRZFlkaDlOcUZpR3F4Y0tWZjlKMVFoOFp2NisKaVI1enVtZU1rRExVM3A1ZXZHd0liN0RzL0Q2NlE2eWhvbThGT3ZoODV3S0NBUUF0YnkwdklCVHJzdDRSeWpYdgo1UzFFeUhrNFZQZzBiSDh4S3JSc0hac1Q5b0R4VEI1RWFhYWlZa05WTWJOQXZybWVVaXUrRXoySW1VcmJ3dTljCm9jSG9aeXRWcUlNdkxTYnI4UDhQb3o2KzJXYkRqc2dlbHM2N25YN2pZcUJzT3BZNjZQdkVEKzMzZk1QcmcyUUEKSkxLb1dWbUs0SHJyR1ZVdy9Qemkya0E4ckZDNUFtc1BIM3FKbjYvSnVBUEloWmpUaGcwbEpYTmdIK0E1TGkyLwpnQW11aXc3ZmMxOG5WM0dkWUtlMHE4ZGRQVWFmdEpXMjQ5ZTlybGFJM2dselFSTnpoZGNiclRYU3ZxUjBXWG9NCnM0aWkwa0tOYi9nZjBLd2NGaW95dk5vMUtHeElzOWNQamVGb3NCbkk5VGpjcnRiMW8rS0lMWEJuVS8vVFV5ZFoKaDMxTkFvSUJBQkhxN3FQYlljODlNbmhaNndvcVVzQTlkZHNLRDZndkFaSFRyR001dDlXOXpiRmVUcHV1OVNkSgo3RW5vcnFhZlB3eWJUVGhHVGJlV1dTRkt4ZGR2bkZKaEVQdkMyanJMK1ZkQVkybHhIS0hTVlAzWFpOb3RqZXEwClRtR2IrRzlQV1pIZGl4R0NQY2NZaXVVc1doZ0piVGlsTGU0V1g3a1c2QWFvNktBZW5Pcm1MU1Y3Z0tDM1grQk8KZWtjNmpTSUJ6eVJsc2dOZlYyK2tKZGxBNWh1blVpVHRlbXVvNHVVSUdQTCt3RXVEMWNFdU5ub0lTdFdGeHRxOAptd3AxU0Mxdm1lMUpSU1VXUUdjK0RyWDZjTEQ1Q2dHSW8vSHZiTldFVmYvLzlOUE55RWtlVktMUHEraW53amRQCkphdHZZa1JYdjRoc0Q4Ynh0a0JjaEZlZGxaQTlGYk1DZ2dFQWZpb1QyaVgyVnVVdVJnejNjVEpvTjYvdUhyUk4KdlR1SHFMdFFaOXRPbVFJWFJ1SVh4THFKVUZsYjZCL01YVG1iZ3lZNlZyaTFMNDVpWjJ1SEZMU293OFV3ZWg4WQpqcDZMYXFndnlTc3M3RTd6WjloYXF2WUxuVGNqc0tGNkFCbnM1Z1N3ZTZrN090VHFGN204R3l2bG1LRGN5MUkxCldScW5GcHFuMzdjcTZuekxZSW9wMmVLQ01JMWwxeTV6bXc5eDhQNkRJSlVuVzM4ekZ0QUJPc3FSdXlWTU1NVysKMU52QWJJbkhiMjBFWWhoa0ZXMDcwOEJnOFZETzZKMzA2R1hvZjNzZmM3TG1zVTB3ZU9aOXhOVjlGa2s0eG5Ndgp3RmxvdmJoNWV1UUlBdnoxa1RKNWUvUGZ6YjV6WExtLzR1NnRITGIrVFdQMExScTNqUkd3U2twVG93PT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    kind: Secret
    metadata:
      labels:
        app: directvolumemigration-rsync-transfer
        app.kubernetes.io/part-of: openshift-migration
        directvolumemigration: 80228d22-f4c5-48d5-8c71-86253c75e073
        migration.openshift.io/migrated-by-migplan: 1f631527-b935-4aa7-97c2-7bf086528b8e
        owner: directvolumemigration
        purpose: rsync
      name: fs-crane2-stunnel-client-secret
      namespace: oraclecpq
    type: Opaque
  - apiVersion: v1
    data:
      MEMORY_LIMIT: NTEyTWk=
      NAME: aHR0cGQtZXhhbXBsZQ==
      NAMESPACE: b3BlbnNoaWZ0
      SOURCE_REPOSITORY_URL: aHR0cHM6Ly9naXRodWIuY29tL3NjbG9yZy9odHRwZC1leC5naXQ=
    kind: Secret
    metadata:
      generateName: httpd-example-parameters-
      name: httpd-example-parameters-szv2d
      namespace: oraclecpq
    type: Opaque
  - apiVersion: v1
    data:
      .dockerconfigjson: eyJhdXRocyI6eyJrb2hsZXJjaXRyZWdpc3RyeS5henVyZWNyLmlvIjp7InVzZXJuYW1lIjoia29obGVyY2l0cmVnaXN0cnkiLCJwYXNzd29yZCI6Inh3K2pHRVl6K1RSUGR3bjZINUNSUE40TVBYc2ErNjE3IiwiZW1haWwiOiJuYXRoYW4ua3JhY2h0QGtvaGxlci5jb20iLCJhdXRoIjoiYTI5b2JHVnlZMmwwY21WbmFYTjBjbms2ZUhjcmFrZEZXWG9yVkZKUVpIZHVOa2cxUTFKUVRqUk5VRmh6WVNzMk1UYz0ifX19
    kind: Secret
    metadata:
      name: kohlercitregistry
      namespace: oraclecpq
    type: kubernetes.io/dockerconfigjson
  - apiVersion: v1
    data:
      .dockercfg: 
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: pipeline
        openshift.io/token-secret.name: pipeline-token-2ssm7
        openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvcmFjbGVjcHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoicGlwZWxpbmUtdG9rZW4tMnNzbTciLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoicGlwZWxpbmUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIwOTc2MDdmMS0zZTA1LTQ2NGQtOTBlOC0xZjc3ZDEyOWExOTYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6b3JhY2xlY3BxOnBpcGVsaW5lIn0.oBJin_tLgalsN21TFmf9K7g6vMtpU-ZWesp9pqFhkbyF4lFEAfgWptRU9Mce7wjsGTm1EvmHGrqSLl54GMeLss2CRcjfVDKv8AYoASSlCboduAUUc4WrT1843FJUX0SHeLioYDNAMLO6Lhr6uVm3HrkZkq3N7aZqQXaD2jyCUyFD4hnSXHYjN4KiA0DSVRylB8TXrHGzDRIttYzZb__p02811devPP9ppxY7RIEAbAARZBcURLR7CqFNkyfOt6SVKSKYl81En44PgU8ZWkM0lzAvPwO9Ys1t_Cl_j1ITPYSf5yxwGNxI6aJ_aVhwxxsad4ed9ZXKopt8__XSalOrOw
      name: pipeline-dockercfg-2pmb5
      namespace: oraclecpq
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: false
          controller: true
          kind: Secret
          name: pipeline-token-2ssm7
    type: kubernetes.io/dockercfg
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pY0dsd1pXeHBibVV0ZEc5clpXNHRNbk56YlRjaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWNHbHdaV3hwYm1VaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJd09UYzJNRGRtTVMwelpUQTFMVFEyTkdRdE9UQmxPQzB4WmpjM1pERXlPV0V4T1RZaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZiM0poWTJ4bFkzQnhPbkJwY0dWc2FXNWxJbjAub0JKaW5fdExnYWxzTjIxVEZtZjlLN2c2dk10cFUtWldlc3A5cHFGaGtieUY0bEZFQWZnV3B0UlU5TWNlN3dqc0dUbTFFdm1IR3JxU0xsNTRHTWVMc3MyQ1JjamZWREt2OEFZb0FTU2xDYm9kdUFVVWM0V3JUMTg0M0ZKVVgwU0hlTGlvWUROQU1MTzZMaHI2dVZtM0hya1prcTNON2FacVFYYUQyanlDVXlGRDRoblNYSFlqTjRLaUEwRFNWUnlsQjhUWHJIR3pEUkl0dFl6WmJfX3AwMjgxMWRldlBQOXBweFk3UklFQWJBQVJaQmNVUkxSN0NxRk5reWZPdDZTVktTS1lsODFFbjQ0UGdVOFpXa00wbHpBdlB3TzlZczF0X0NsX2oxSVRQWVNmNXl4d0dOeEk2YUpfYVZod3h4c2FkNGVkOVpYS29wdDhfX1hTYWxPck93
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
        kubernetes.io/service-account.name: pipeline
      name: pipeline-token-2ssm7
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pY0dsd1pXeHBibVV0ZEc5clpXNHRaRFIzYW1NaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWNHbHdaV3hwYm1VaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJd09UYzJNRGRtTVMwelpUQTFMVFEyTkdRdE9UQmxPQzB4WmpjM1pERXlPV0V4T1RZaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZiM0poWTJ4bFkzQnhPbkJwY0dWc2FXNWxJbjAuS2xTMzI2SHpvYmJyblRjZlBOanVMeTZ1aENFZ3Q5RmhHaENTNlJuRlUtTEk4LWxYNjAwcXBfOWJPWXdxWWJFZS04ZDltZnYzWHRtR0RlUTJZbEJicFJpYWpsSGxPRHB5MXJxT25OWDRxbm8xdW0zVGFoSF9RYlM2SEk1WF9neV9xX2RMTVgtVk9uRHdLb0dqX2Q3OGlMUVo3WVlaQTVwN3kwUjk5cU9WZXhsRGJINGJLVnlfR1BJSjBkYUVMaGxjWkprNklqaUd1QjZZS2dBNjhIRGdKNi1pakdrWW0yT0tvbWIzYmJsbVR4NnRkVHQwd21MMUVaSTFjbDlKZG9xTm1VakwyM0lYQ05Gb25FamxxWVdDQVNfb2lxY2JtVkx2MlZFNHRlbk9QX3hRU3k1djJraUlleGZKdXpVaHdZTUdjemJsLXFBXzUwYTB3U1F4dDl2SkNn
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: pipeline
      name: pipeline-token-d4wjc
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      .dockercfg: 
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: useroot
        openshift.io/token-secret.name: useroot-token-gxz8m
        openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJvcmFjbGVjcHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoidXNlcm9vdC10b2tlbi1neHo4bSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ1c2Vyb290Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZjhhMGIxYjMtMmJhOS00Njc5LTkzYTUtYzVlMWNjMzZjOTQ4Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om9yYWNsZWNwcTp1c2Vyb290In0.vTVfII_H_8DJZkwlihA7Jqh2hl23168XibqUqF0B6nBMtQOclhwnaoavOCXE7t1pA9k1g3lRvh-GpjO7quhiKjShTE0AN9nMz9JvuLnK0YKyb7C8BIlIxfX0Z0tNTjCGK1OsomqjfyCURbj_qFlmPl1Cfzfiy9-BTVdke4qfD8H3T9nwit7fs3mCczlUrzsunkwe0ryOjwI8Ypie_b0llrp-HTKtsx1FefBiyblyLUuXtcWBamDfG0xFp1cqOIpfj_rkPtaPAo-sqb-7sZEoxgFjCdDnYOdT9hhEq6lqAE6CFoEXUcxEdWaSr_7Ryze1CNHVHojQ4Gn2equKJZlF8w
      name: useroot-dockercfg-knbzp
      namespace: oraclecpq
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: false
          controller: true
          kind: Secret
          name: useroot-token-gxz8m
    type: kubernetes.io/dockercfg
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pZFhObGNtOXZkQzEwYjJ0bGJpMDJkMmQ0Y3lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKMWMyVnliMjkwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWmpoaE1HSXhZak10TW1KaE9TMDBOamM1TFRrellUVXRZelZsTVdOak16WmpPVFE0SWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tOXlZV05zWldOd2NUcDFjMlZ5YjI5MEluMC5CWjVBclFxRDE0TnZ2Yk15WER2S29sVnY3c01jZWZPcklpaHhrdUYwUTcwTW5pUVQ1bndabnhzemtDRzVYS2tuRENsakF0Rl9PT3ZEY2RrZUowUjJCcmYyYUxkUzhtTlhmV0tRYUdvRC13QTNzbHIxRzY2cmw1eVk5TG1rRGhFeXJTc1doUWg0UHV0X09JYk1jSEVrMERMd2RZOGFSajFPTXZpTEJ3d1lVOFByTW1LdW9td1RZQzhBSVcwWUVxTzhmUnpzV2NwOWlNQmxPUWxrVWNGT01vb2FsV1BaVm5yajRqVG9MeGxFSF9FSXBhSThLeDFVSUh5SnliR1c4TGI2aG9xRlBYOHctVFpoX2YtUzZjUlIzN1cyRUtyQVFOckQ4Z24xakRjaDI2aTZ3MXNDdUF0LUVCZVp4Vjd6X25SSGJfQUhoeExYMW50dUJVSlNUWVlBcVE=
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/service-account.name: useroot
      name: useroot-token-6wgxs
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
  - apiVersion: v1
    data:
      ca.crt: 
      namespace: b3JhY2xlY3Bx
      service-ca.crt: 
      token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp2Y21GamJHVmpjSEVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pZFhObGNtOXZkQzEwYjJ0bGJpMW5lSG80YlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKMWMyVnliMjkwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWmpoaE1HSXhZak10TW1KaE9TMDBOamM1TFRrellUVXRZelZsTVdOak16WmpPVFE0SWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tOXlZV05zWldOd2NUcDFjMlZ5YjI5MEluMC52VFZmSUlfSF84REpaa3dsaWhBN0pxaDJobDIzMTY4WGlicVVxRjBCNm5CTXRRT2NsaHduYW9hdk9DWEU3dDFwQTlrMWczbFJ2aC1HcGpPN3F1aGlLalNoVEUwQU45bk16OUp2dUxuSzBZS3liN0M4QklsSXhmWDBaMHROVGpDR0sxT3NvbXFqZnlDVVJial9xRmxtUGwxQ2Z6Zml5OS1CVFZka2U0cWZEOEgzVDlud2l0N2ZzM21DY3psVXJ6c3Vua3dlMHJ5T2p3SThZcGllX2IwbGxycC1IVEt0c3gxRmVmQml5Ymx5TFV1WHRjV0JhbURmRzB4RnAxY3FPSXBmal9ya1B0YVBBby1zcWItN3NaRW94Z0ZqQ2REbllPZFQ5aGhFcTZscUFFNkNGb0VYVWN4RWRXYVNyXzdSeXplMUNOSFZIb2pRNEduMmVxdUtKWmxGOHc=
    kind: Secret
    metadata:
      annotations:
        kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
        kubernetes.io/service-account.name: useroot
      name: useroot-token-gxz8m
      namespace: oraclecpq
    type: kubernetes.io/service-account-token
kind: List
metadata: {}
spec:
  template:
    spec:
      containers: []
  containers: []
  storageClassName: gp3-csi
